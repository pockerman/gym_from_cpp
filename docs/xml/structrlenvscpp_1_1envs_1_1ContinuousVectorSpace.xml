<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structrlenvscpp_1_1envs_1_1ContinuousVectorSpace" kind="struct" language="C++" prot="public">
    <compoundname>rlenvscpp::envs::ContinuousVectorSpace</compoundname>
    <templateparamlist>
      <param>
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <declname>Size</declname>
        <defname>Size</defname>
      </param>
      <param>
        <type>typename T</type>
        <defval><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structrlenvscpp_1_1envs_1_1ContinuousVectorSpace_1a7b632ae4bacbc9751359477877594a56" prot="public" static="no">
        <type>std::vector&lt; T &gt;</type>
        <definition>typedef std::vector&lt;T&gt; rlenvscpp::envs::ContinuousVectorSpace&lt; Size, T &gt;::space_item_type</definition>
        <argsstring></argsstring>
        <name>space_item_type</name>
        <briefdescription>
<para>item_t </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/space_type.h" line="167" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/space_type.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structrlenvscpp_1_1envs_1_1ContinuousVectorSpace_1ae084ddd1e6a365db33ec415f98533246" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>constexpr uint_t rlenvscpp::envs::ContinuousVectorSpace&lt; Size, T &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <initializer>= Size</initializer>
        <briefdescription>
<para>The overall size of the space meaning how many elements can potentially the space have. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/space_type.h" line="162" column="29" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/space_type.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/space_type.h" line="154" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/space_type.h" bodystart="155" bodyend="168"/>
    <listofallmembers>
      <member refid="structrlenvscpp_1_1envs_1_1ContinuousVectorSpace_1ae084ddd1e6a365db33ec415f98533246" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::ContinuousVectorSpace</scope><name>size</name></member>
      <member refid="structrlenvscpp_1_1envs_1_1ContinuousVectorSpace_1a7b632ae4bacbc9751359477877594a56" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::ContinuousVectorSpace</scope><name>space_item_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
