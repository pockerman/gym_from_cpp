<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classrlenvscpp_1_1VectorTimeStep" kind="class" language="C++" prot="public">
    <compoundname>rlenvscpp::VectorTimeStep</compoundname>
    <includes refid="vector__time__step_8h" local="no">vector_time_step.h</includes>
    <templateparamlist>
      <param>
        <type>typename StateType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrlenvscpp_1_1VectorTimeStep_1ae45a011f39ce8bfc89c278045d85acda" prot="public" static="no">
        <type>StateType</type>
        <definition>typedef StateType rlenvscpp::VectorTimeStep&lt; StateType &gt;::state_type</definition>
        <argsstring></argsstring>
        <name>state_type</name>
        <briefdescription>
<para>state_ Type of the state </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="30" column="23" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrlenvscpp_1_1VectorTimeStep_1af391030eb3b45ee98b367552e3a87b0f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacerlenvscpp_1a805e84d4818b37d501c58e8e38cb99bb" kindref="member">TimeStepTp</ref> &gt;</type>
        <definition>std::vector&lt;TimeStepTp&gt; rlenvscpp::VectorTimeStep&lt; StateType &gt;::types_</definition>
        <argsstring></argsstring>
        <name>types_</name>
        <briefdescription>
<para>the step types for the environments </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="130" column="13" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1VectorTimeStep_1afdf5ae656ef364837accf41899d43c14" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt;</type>
        <definition>std::vector&lt;real_t&gt; rlenvscpp::VectorTimeStep&lt; StateType &gt;::rewards_</definition>
        <argsstring></argsstring>
        <name>rewards_</name>
        <briefdescription>
<para>The rewards received for every environment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="135" column="13" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1VectorTimeStep_1a01bbf382b7905dbae343ad311b508910" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classrlenvscpp_1_1VectorTimeStep_1ae45a011f39ce8bfc89c278045d85acda" kindref="member">state_type</ref> &gt;</type>
        <definition>std::vector&lt;state_type&gt; rlenvscpp::VectorTimeStep&lt; StateType &gt;::obs_</definition>
        <argsstring></argsstring>
        <name>obs_</name>
        <briefdescription>
<para>Observations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="140" column="14" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1VectorTimeStep_1acc7322e88f0094b62f1096e9ca0f30b1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt;</type>
        <definition>std::vector&lt;real_t&gt; rlenvscpp::VectorTimeStep&lt; StateType &gt;::discounts_</definition>
        <argsstring></argsstring>
        <name>discounts_</name>
        <briefdescription>
<para>The discount factors for every environment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="145" column="13" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1VectorTimeStep_1a16f1e6e598d1df50882bf01393d08a4c" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::any &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::any&gt; rlenvscpp::VectorTimeStep&lt; StateType &gt;::extra_</definition>
        <argsstring></argsstring>
        <name>extra_</name>
        <briefdescription>
<para>extra_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="151" column="24" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1ace1bde43915e5cb85729a6d671b71d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::VectorTimeStep&lt; StateType &gt;::VectorTimeStep</definition>
        <argsstring>()=default</argsstring>
        <name>VectorTimeStep</name>
        <briefdescription>
<para>Default construcotr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="35" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1a0f7b0680e38425b96ae3e447e1b97005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::VectorTimeStep&lt; StateType &gt;::VectorTimeStep</definition>
        <argsstring>(const std::vector&lt; TimeStepTp &gt; &amp;types, const std::vector&lt; real_t &gt; &amp;rewards, const std::vector&lt; state_type &gt; &amp;obs)</argsstring>
        <name>VectorTimeStep</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespacerlenvscpp_1a805e84d4818b37d501c58e8e38cb99bb" kindref="member">TimeStepTp</ref> &gt; &amp;</type>
          <declname>types</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt; &amp;</type>
          <declname>rewards</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classrlenvscpp_1_1VectorTimeStep_1ae45a011f39ce8bfc89c278045d85acda" kindref="member">state_type</ref> &gt; &amp;</type>
          <declname>obs</declname>
        </param>
        <briefdescription>
<para><ref refid="classrlenvscpp_1_1VectorTimeStep" kindref="compound">VectorTimeStep</ref>. Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="41" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="182" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1a13f8b33cd8b3dbcb5cd91a68228f8e70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::VectorTimeStep&lt; StateType &gt;::VectorTimeStep</definition>
        <argsstring>(const std::vector&lt; TimeStepTp &gt; &amp;types, const std::vector&lt; real_t &gt; &amp;rewards, const std::vector&lt; state_type &gt; &amp;obs, const std::vector&lt; real_t &gt; &amp;discount_factors)</argsstring>
        <name>VectorTimeStep</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespacerlenvscpp_1a805e84d4818b37d501c58e8e38cb99bb" kindref="member">TimeStepTp</ref> &gt; &amp;</type>
          <declname>types</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt; &amp;</type>
          <declname>rewards</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classrlenvscpp_1_1VectorTimeStep_1ae45a011f39ce8bfc89c278045d85acda" kindref="member">state_type</ref> &gt; &amp;</type>
          <declname>obs</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt; &amp;</type>
          <declname>discount_factors</declname>
        </param>
        <briefdescription>
<para><ref refid="classrlenvscpp_1_1VectorTimeStep" kindref="compound">VectorTimeStep</ref>. Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="49" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="170" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1abc29586dd1d5283bafb434acd69e63b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::VectorTimeStep&lt; StateType &gt;::VectorTimeStep</definition>
        <argsstring>(const std::vector&lt; TimeStepTp &gt; &amp;types, const std::vector&lt; real_t &gt; &amp;rewards, const std::vector&lt; state_type &gt; &amp;obs, const std::vector&lt; real_t &gt; &amp;discount_factors, std::unordered_map&lt; std::string, std::any &gt; &amp;&amp;extra)</argsstring>
        <name>VectorTimeStep</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespacerlenvscpp_1a805e84d4818b37d501c58e8e38cb99bb" kindref="member">TimeStepTp</ref> &gt; &amp;</type>
          <declname>types</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt; &amp;</type>
          <declname>rewards</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classrlenvscpp_1_1VectorTimeStep_1ae45a011f39ce8bfc89c278045d85acda" kindref="member">state_type</ref> &gt; &amp;</type>
          <declname>obs</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt; &amp;</type>
          <declname>discount_factors</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; std::string, std::any &gt; &amp;&amp;</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="55" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="156" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1a03df9c4ad28d8473dbb54572d5915c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::VectorTimeStep&lt; StateType &gt;::VectorTimeStep</definition>
        <argsstring>(const VectorTimeStep &amp;other)</argsstring>
        <name>VectorTimeStep</name>
        <param>
          <type>const <ref refid="classrlenvscpp_1_1VectorTimeStep" kindref="compound">VectorTimeStep</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="classrlenvscpp_1_1TimeStep" kindref="compound">TimeStep</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="66" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="193" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1a92c67a71c993399dd040c2e747d48549" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrlenvscpp_1_1VectorTimeStep" kindref="compound">VectorTimeStep</ref> &amp;</type>
        <definition>VectorTimeStep&lt; StateType &gt; &amp; rlenvscpp::VectorTimeStep&lt; StateType &gt;::operator=</definition>
        <argsstring>(const VectorTimeStep &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classrlenvscpp_1_1VectorTimeStep" kindref="compound">VectorTimeStep</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="71" column="20" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="204" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1af57b0842a0eab2b46723eb24fd25608d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::VectorTimeStep&lt; StateType &gt;::VectorTimeStep</definition>
        <argsstring>(VectorTimeStep &amp;&amp;other) noexcept</argsstring>
        <name>VectorTimeStep</name>
        <param>
          <type><ref refid="classrlenvscpp_1_1VectorTimeStep" kindref="compound">VectorTimeStep</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="classrlenvscpp_1_1TimeStep" kindref="compound">TimeStep</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="77" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="215" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1a217282277f276e8d3651fa37bc8aba49" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classrlenvscpp_1_1VectorTimeStep" kindref="compound">VectorTimeStep</ref> &amp;</type>
        <definition>VectorTimeStep&lt; StateType &gt; &amp; rlenvscpp::VectorTimeStep&lt; StateType &gt;::operator=</definition>
        <argsstring>(VectorTimeStep &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classrlenvscpp_1_1VectorTimeStep" kindref="compound">VectorTimeStep</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator = </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="84" column="20" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="228" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1adc783dd411c3c8a49831d9f2413cb10b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespacerlenvscpp_1a805e84d4818b37d501c58e8e38cb99bb" kindref="member">TimeStepTp</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;TimeStepTp&gt;&amp; rlenvscpp::VectorTimeStep&lt; StateType &gt;::types</definition>
        <argsstring>() const noexcept</argsstring>
        <name>types</name>
        <briefdescription>
<para>type </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="90" column="23" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1a10f43c142a47669b4e3d493f83eb7a96" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classrlenvscpp_1_1VectorTimeStep_1ae45a011f39ce8bfc89c278045d85acda" kindref="member">state_type</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;state_type&gt;&amp; rlenvscpp::VectorTimeStep&lt; StateType &gt;::observations</definition>
        <argsstring>() const</argsstring>
        <name>observations</name>
        <briefdescription>
<para>observation </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="96" column="23" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1a1aad761e6d9fec2ba19c0338d6a1de08" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;real_t&gt;&amp; rlenvscpp::VectorTimeStep&lt; StateType &gt;::rewards</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rewards</name>
        <briefdescription>
<para>reward </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="102" column="23" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1a464ad3a20cc3b55f46576a0d12dacec5" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::VectorTimeStep&lt; StateType &gt;::reward</definition>
        <argsstring>() const noexcept</argsstring>
        <name>reward</name>
        <briefdescription>
<para>Returns the sum of the rewards received. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="107" column="8" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="241" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1a7fcdce4fab95fa81639909c88f3fcd57" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlenvscpp::VectorTimeStep&lt; StateType &gt;::done</definition>
        <argsstring>() const noexcept</argsstring>
        <name>done</name>
        <briefdescription>
<para>Returns true if any time step is LAST. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="112" column="6" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="250" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1a6f602acd46d367da960db882711ed8ad" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;real_t&gt;&amp; rlenvscpp::VectorTimeStep&lt; StateType &gt;::discounts</definition>
        <argsstring>() const noexcept</argsstring>
        <name>discounts</name>
        <briefdescription>
<para>discount. Returns the discount factor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="117" column="23" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1VectorTimeStep_1a55d3cef1e69b2c5b827587cdc60a3954" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlenvscpp::VectorTimeStep&lt; StateType &gt;::last</definition>
        <argsstring>() const noexcept</argsstring>
        <name>last</name>
        <briefdescription>
<para>last </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="123" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="266" bodyend="268"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Forward declaration. </para>
    </briefdescription>
    <detaileddescription>
<para>VectorTimeSetp class. </para>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" line="22" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/vector_time_step.h" bodystart="23" bodyend="153"/>
    <listofallmembers>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a6f602acd46d367da960db882711ed8ad" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>discounts</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1acc7322e88f0094b62f1096e9ca0f30b1" prot="private" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>discounts_</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a7fcdce4fab95fa81639909c88f3fcd57" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>done</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a16f1e6e598d1df50882bf01393d08a4c" prot="private" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>extra_</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a55d3cef1e69b2c5b827587cdc60a3954" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>last</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a01bbf382b7905dbae343ad311b508910" prot="private" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>obs_</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a10f43c142a47669b4e3d493f83eb7a96" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>observations</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a92c67a71c993399dd040c2e747d48549" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>operator=</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a217282277f276e8d3651fa37bc8aba49" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>operator=</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a464ad3a20cc3b55f46576a0d12dacec5" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>reward</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a1aad761e6d9fec2ba19c0338d6a1de08" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>rewards</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1afdf5ae656ef364837accf41899d43c14" prot="private" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>rewards_</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1ae45a011f39ce8bfc89c278045d85acda" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>state_type</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1adc783dd411c3c8a49831d9f2413cb10b" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>types</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1af391030eb3b45ee98b367552e3a87b0f" prot="private" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>types_</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1ace1bde43915e5cb85729a6d671b71d38" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>VectorTimeStep</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a0f7b0680e38425b96ae3e447e1b97005" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>VectorTimeStep</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a13f8b33cd8b3dbcb5cd91a68228f8e70" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>VectorTimeStep</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1abc29586dd1d5283bafb434acd69e63b8" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>VectorTimeStep</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1a03df9c4ad28d8473dbb54572d5915c29" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>VectorTimeStep</name></member>
      <member refid="classrlenvscpp_1_1VectorTimeStep_1af57b0842a0eab2b46723eb24fd25608d" prot="public" virt="non-virtual"><scope>rlenvscpp::VectorTimeStep</scope><name>VectorTimeStep</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
