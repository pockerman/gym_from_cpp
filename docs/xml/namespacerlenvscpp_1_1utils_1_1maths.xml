<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacerlenvscpp_1_1utils_1_1maths" kind="namespace" language="C++">
    <compoundname>rlenvscpp::utils::maths</compoundname>
    <innernamespace refid="namespacerlenvscpp_1_1utils_1_1maths_1_1stats">rlenvscpp::utils::maths::stats</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="math__utils_8h_1abd82152a8f643ba88440bfe6c047d44f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacerlenvscpp_1a3f587743c65d9a1404e3f46d36d86927" kindref="member">int_t</ref></type>
        <definition>int_t rlenvscpp::utils::maths::sign</definition>
        <argsstring>(const T &amp;expr)</argsstring>
        <name>sign</name>
        <param>
          <type>const T &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
<para>Returns the sign of the expression. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/math_utils.h" line="11" column="7" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/math_utils.h" bodystart="11" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="math__utils_8h_1a055ca3469c8a9ad8c4af00620b499479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacerlenvscpp_1a3f587743c65d9a1404e3f46d36d86927" kindref="member">int_t</ref></type>
        <definition>int_t rlenvscpp::utils::maths::sign</definition>
        <argsstring>(const T &amp;expr1, const T &amp;expr2)</argsstring>
        <name>sign</name>
        <param>
          <type>const T &amp;</type>
          <declname>expr1</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>expr2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/math_utils.h" line="22" column="7" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/math_utils.h" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="math__utils_8h_1afdf2b9a0aa01a9bd3fbc255beaec3508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T rlenvscpp::utils::maths::sum_sqr</definition>
        <argsstring>(const DynVec&lt; T &gt; &amp;vec)</argsstring>
        <name>sum_sqr</name>
        <param>
          <type>const DynVec&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Compute the sum of squares of the elements of the given vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/math_utils.h" line="31" column="3" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/math_utils.h" bodystart="31" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="math__utils_8h_1a0d0c6f1644920ae5491efb3634adfe00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T rlenvscpp::utils::maths::sqr</definition>
        <argsstring>(const T &amp;v)</argsstring>
        <name>sqr</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/math_utils.h" line="42" column="3" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/math_utils.h" bodystart="42" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/math_utils.h" line="5" column="1"/>
  </compounddef>
</doxygen>
