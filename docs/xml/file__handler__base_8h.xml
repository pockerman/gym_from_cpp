<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="file__handler__base_8h" kind="file" language="C++">
    <compoundname>file_handler_base.h</compoundname>
    <includes refid="file__formats_8h" local="yes">rlenvs/utils/io/file_formats.h</includes>
    <includes local="yes">boost/noncopyable.hpp</includes>
    <includes local="no">string</includes>
    <includedby refid="file__reader__base_8h" local="yes">/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_reader_base.h</includedby>
    <includedby refid="file__writer__base_8h" local="yes">/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>rlenvs/utils/io/file_formats.h</label>
        <link refid="file__formats_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>boost/noncopyable.hpp</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="1">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_handler_base.h</label>
        <link refid="file__handler__base_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_reader.h</label>
        <link refid="csv__file__reader_8h_source"/>
      </node>
      <node id="4">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/json_file_reader.h</label>
        <link refid="json__file__reader_8h_source"/>
      </node>
      <node id="2">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_reader_base.h</label>
        <link refid="file__reader__base_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_handler_base.h</label>
        <link refid="file__handler__base_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h</label>
        <link refid="csv__file__writer_8h_source"/>
      </node>
      <node id="5">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h</label>
        <link refid="file__writer__base_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase" prot="public">rlenvscpp::utils::io::FileHandlerBase</innerclass>
    <innernamespace refid="namespacerlenvscpp">rlenvscpp</innernamespace>
    <innernamespace refid="namespacerlenvscpp_1_1utils">rlenvscpp::utils</innernamespace>
    <innernamespace refid="namespacerlenvscpp_1_1utils_1_1io">rlenvscpp::utils::io</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2024<sp/>&lt;copyright<sp/>holder&gt;<sp/>&lt;email&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FILE_HANDLER_BASE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FILE_HANDLER_BASE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rlenvs/utils/io/file_formats.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/noncopyable.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerlenvscpp" kindref="compound">rlenvscpp</ref>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">utils{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">io{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HandlerType&gt;</highlight></codeline>
<codeline lineno="19" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase" kindref="compound">FileHandlerBase</ref>:<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>boost::noncopyable</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>HandlerType<sp/>handler_type;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a4dd34387db002879af9a723444031c4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a4dd34387db002879af9a723444031c4e" kindref="member">~FileHandlerBase</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a25574b0138baa00b5784e8a377347a3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrlenvscpp_1_1utils_1_1io_1_1FileFormats_1a49f9121b447504eadba6b60bcfb1be23" kindref="member">FileFormats::Type</ref><sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a25574b0138baa00b5784e8a377347a3c" kindref="member">get_type</ref>()const<sp/>noexcept{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a6c196ffa3d3f81156e3b41efb3019c3f" kindref="member">t_</ref>;}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a52dfca851af7c9ada69417f95906f276" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>handler_type&amp;<sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a52dfca851af7c9ada69417f95906f276" kindref="member">get_file_stream</ref>()noexcept{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a05f4803df34ea07e3be2cff7a647c791" kindref="member">f_</ref>;}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a2b78be19f23ddb54b485c842cc44640e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>handler_type&amp;<sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a2b78be19f23ddb54b485c842cc44640e" kindref="member">get_file_stream</ref>()const<sp/>noexcept{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a05f4803df34ea07e3be2cff7a647c791" kindref="member">f_</ref>;}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1af4922667fec054d4073978d79d07ddfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1af4922667fec054d4073978d79d07ddfe" kindref="member">get_filename</ref>()const<sp/>noexcept{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1aaf32d2b0b34a855ca41d70b5662c5a98" kindref="member">file_name_</ref>;}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1af5bd6b21abc6e41037883f0228269f7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1af5bd6b21abc6e41037883f0228269f7b" kindref="member">is_open</ref>()const<sp/>noexcept{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a05f4803df34ea07e3be2cff7a647c791" kindref="member">f_</ref>.is_open();}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a093d2471335ad33a82c419e6f938cad7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a093d2471335ad33a82c419e6f938cad7" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1ad5138c67486131eb95f09ca9f389dbec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1ad5138c67486131eb95f09ca9f389dbec" kindref="member">open</ref>()=0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a49c92bb502deb480b8c7edbc3de26b18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a49c92bb502deb480b8c7edbc3de26b18" kindref="member">FileHandlerBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file_name,<sp/><ref refid="structrlenvscpp_1_1utils_1_1io_1_1FileFormats_1a49f9121b447504eadba6b60bcfb1be23" kindref="member">FileFormats::Type</ref><sp/>t);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1aaf32d2b0b34a855ca41d70b5662c5a98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1aaf32d2b0b34a855ca41d70b5662c5a98" kindref="member">file_name_</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a6c196ffa3d3f81156e3b41efb3019c3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrlenvscpp_1_1utils_1_1io_1_1FileFormats_1a49f9121b447504eadba6b60bcfb1be23" kindref="member">FileFormats::Type</ref><sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a6c196ffa3d3f81156e3b41efb3019c3f" kindref="member">t_</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a05f4803df34ea07e3be2cff7a647c791" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>handler_type<sp/><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a05f4803df34ea07e3be2cff7a647c791" kindref="member">f_</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HandlerType&gt;</highlight></codeline>
<codeline lineno="96" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a49c92bb502deb480b8c7edbc3de26b18" refkind="member"><highlight class="normal"><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a49c92bb502deb480b8c7edbc3de26b18" kindref="member">FileHandlerBase&lt;HandlerType&gt;::FileHandlerBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file_name,<sp/><ref refid="structrlenvscpp_1_1utils_1_1io_1_1FileFormats_1a49f9121b447504eadba6b60bcfb1be23" kindref="member">FileFormats::Type</ref><sp/>t)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal">file_name_(file_name),</highlight></codeline>
<codeline lineno="99"><highlight class="normal">t_(t)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HandlerType&gt;</highlight></codeline>
<codeline lineno="103" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a4dd34387db002879af9a723444031c4e" refkind="member"><highlight class="normal"><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a4dd34387db002879af9a723444031c4e" kindref="member">FileHandlerBase&lt;HandlerType&gt;::~FileHandlerBase</ref>(){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>close();</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HandlerType&gt;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a093d2471335ad33a82c419e6f938cad7" refkind="member"><highlight class="normal"><ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a093d2471335ad33a82c419e6f938cad7" kindref="member">FileHandlerBase&lt;HandlerType&gt;::close</ref>(){</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f_.is_open())</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_.close();</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>FILE_HANDLER_BASE_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_handler_base.h"/>
  </compounddef>
</doxygen>
