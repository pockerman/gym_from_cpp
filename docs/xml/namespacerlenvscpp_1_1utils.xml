<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacerlenvscpp_1_1utils" kind="namespace" language="C++">
    <compoundname>rlenvscpp::utils</compoundname>
    <innerclass refid="classrlenvscpp_1_1utils_1_1IterationCounter" prot="public">rlenvscpp::utils::IterationCounter</innerclass>
    <innerclass refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController" prot="public">rlenvscpp::utils::IterativeAlgorithmController</innerclass>
    <innerclass refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult" prot="public">rlenvscpp::utils::IterativeAlgorithmResult</innerclass>
    <innernamespace refid="namespacerlenvscpp_1_1utils_1_1geom">rlenvscpp::utils::geom</innernamespace>
    <innernamespace refid="namespacerlenvscpp_1_1utils_1_1io">rlenvscpp::utils::io</innernamespace>
    <innernamespace refid="namespacerlenvscpp_1_1utils_1_1maths">rlenvscpp::utils::maths</innernamespace>
    <innernamespace refid="namespacerlenvscpp_1_1utils_1_1trajectory">rlenvscpp::utils::trajectory</innernamespace>
    <innernamespace refid="namespacerlenvscpp_1_1utils_1_1unit__converter">rlenvscpp::utils::unit_converter</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="iterative__algorithm__result_8h_1a109333d4b6e90905ddc581984771eb67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; rlenvscpp::utils::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const IterativeAlgorithmResult &amp;result)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult" kindref="compound">IterativeAlgorithmResult</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" line="67" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="std__map__utils_8h_1a7cde75d9bbda1894cebd971d7dbf395c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutT</type>
          </param>
        </templateparamlist>
        <type>OutT</type>
        <definition>OutT rlenvscpp::utils::resolve</definition>
        <argsstring>(const std::string &amp;name, const std::map&lt; std::string, std::any &gt; &amp;input)</argsstring>
        <name>resolve</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::map&lt; std::string, std::any &gt; &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/std_map_utils.h" line="14" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/std_map_utils.h" bodystart="14" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/geometry/bounding_box_type.h" line="5" column="1"/>
  </compounddef>
</doxygen>
