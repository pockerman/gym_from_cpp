<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter" kind="class" language="C++" prot="public">
    <compoundname>rlenvscpp::utils::io::CSVWriter</compoundname>
    <basecompoundref refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase" prot="public" virt="non-virtual">rlenvscpp::utils::io::FileWriterBase</basecompoundref>
    <includes refid="csv__file__writer_8h" local="no">csv_file_writer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a6c339b83c376e7d162dc9373b61c234d" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char rlenvscpp::utils::io::CSVWriter::delim_</definition>
        <argsstring></argsstring>
        <name>delim_</name>
        <briefdescription>
<para>The delimiter used to separate the values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="91" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a23dd9ab4eccac113ddeb5bf72e13c046" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>static char rlenvscpp::utils::io::CSVWriter::default_delimiter</definition>
        <argsstring>()</argsstring>
        <name>default_delimiter</name>
        <briefdescription>
<para>The default column delimiter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="26" column="17" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" bodystart="26" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a1085ad523618872c4cf28dc7fcc47151" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::utils::io::CSVWriter::CSVWriter</definition>
        <argsstring>(const std::string &amp;filename, char delim=CSVWriter::default_delimiter())</argsstring>
        <name>CSVWriter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delim</declname>
          <defval><ref refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a23dd9ab4eccac113ddeb5bf72e13c046" kindref="member">CSVWriter::default_delimiter</ref>()</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="31" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.cpp" bodystart="7" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a89fa3d98ff3d04de5d49a42fcb82ca3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::io::CSVWriter::write_column_names</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;col_names, bool write_header=true)</argsstring>
        <name>write_column_names</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>col_names</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>write_header</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Write the column names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="37" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.cpp" bodystart="14" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1abc3af661dd1e915bb948f38701ef5e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::io::CSVWriter::write_column_names</definition>
        <argsstring>(const std::vector&lt; std::string_view &gt; &amp;col_names, bool write_header=true)</argsstring>
        <name>write_column_names</name>
        <param>
          <type>const std::vector&lt; std::string_view &gt; &amp;</type>
          <declname>col_names</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>write_header</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Write the column names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="43" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.cpp" bodystart="42" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a2517c198799e1879bb13cc83537730c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::io::CSVWriter::write_column_names</definition>
        <argsstring>(const std::initializer_list&lt; std::string_view &gt; &amp;col_names, bool write_header=true)</argsstring>
        <name>write_column_names</name>
        <param>
          <type>const std::initializer_list&lt; std::string_view &gt; &amp;</type>
          <declname>col_names</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>write_header</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Write the column names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="49" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.cpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1ada9f77a552df8c65b0e200e1331ff83d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rlenvscpp::utils::io::CSVWriter::write_row</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;vals)</argsstring>
        <name>write_row</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Write a row of the file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="56" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" bodystart="97" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a3a2b29771be9ed3076d4d9acd5841d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rlenvscpp::utils::io::CSVWriter::write_row</definition>
        <argsstring>(const DynVec&lt; T &gt; &amp;vals)</argsstring>
        <name>write_row</name>
        <param>
          <type>const DynVec&lt; T &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Write the given Vec as a row. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="62" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" bodystart="119" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1acfe72bf5fb2de2586b128456fdbc220f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rlenvscpp::utils::io::CSVWriter::write_column_vector</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;vals)</argsstring>
        <name>write_column_vector</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>vals</declname>
        </param>
        <briefdescription>
<para>Write the given vector as a column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="68" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" bodystart="141" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a5162af21271a6fd1794c9c9418b706a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rlenvscpp::utils::io::CSVWriter::write_row</definition>
        <argsstring>(const std::tuple&lt; T... &gt; &amp;row)</argsstring>
        <name>write_row</name>
        <param>
          <type>const std::tuple&lt; T... &gt; &amp;</type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Write the given tuple as a row. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="74" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" bodystart="155" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a3f5df624270906e5bc804924417815d7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::io::CSVWriter::set_delimiter</definition>
        <argsstring>(char delim) noexcept</argsstring>
        <name>set_delimiter</name>
        <param>
          <type>char</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
<para>Set the delimiter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="79" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a96e7f89320610ed21a88e1dfcc6976c4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>char</type>
        <definition>char rlenvscpp::utils::io::CSVWriter::get_delimiter</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get_delimiter</name>
        <briefdescription>
<para>Returns the column delimiter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="84" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" bodystart="84" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter" kindref="compound">CSVWriter</ref> class. Handles writing into CSV file format. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>rlenvscpp::utils::io::CSVWriter</label>
        <link refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rlenvscpp::utils::io::FileWriterBase</label>
        <link refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>boost::noncopyable</label>
      </node>
      <node id="3">
        <label>rlenvscpp::utils::io::FileHandlerBase&lt; std::ofstream &gt;</label>
        <link refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase"/>
        <childnode refid="4" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>rlenvscpp::utils::io::CSVWriter</label>
        <link refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rlenvscpp::utils::io::FileWriterBase</label>
        <link refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>boost::noncopyable</label>
      </node>
      <node id="3">
        <label>rlenvscpp::utils::io::FileHandlerBase&lt; std::ofstream &gt;</label>
        <link refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase"/>
        <childnode refid="4" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" line="18" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/csv_file_writer.h" bodystart="19" bodyend="93"/>
    <listofallmembers>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a093d2471335ad33a82c419e6f938cad7" prot="public" virt="virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>close</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1adca29d9ab460fad084865225764c5964" prot="protected" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>comment_mark_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a1085ad523618872c4cf28dc7fcc47151" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>CSVWriter</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1afd7c3e60dc2245cf9e1910ecb11e5ffd" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>default_comment_mark</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a23dd9ab4eccac113ddeb5bf72e13c046" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>default_delimiter</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a6c339b83c376e7d162dc9373b61c234d" prot="private" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>delim_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a05f4803df34ea07e3be2cff7a647c791" prot="protected" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>f_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1aaf32d2b0b34a855ca41d70b5662c5a98" prot="protected" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>file_name_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a49c92bb502deb480b8c7edbc3de26b18" prot="protected" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>FileHandlerBase</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1ac97ba5ca0fdf90c2ba609494164e0bf3" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>FileWriterBase</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1ad329b68f8430a376527c89c48bff4d25" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>FileWriterBase</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1ae0d5f7f48df4780c9d365ec9009d2516" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>get_comment_mark</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a96e7f89320610ed21a88e1dfcc6976c4" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>get_delimiter</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a52dfca851af7c9ada69417f95906f276" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>get_file_stream</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a2b78be19f23ddb54b485c842cc44640e" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>get_file_stream</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1af4922667fec054d4073978d79d07ddfe" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>get_filename</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a25574b0138baa00b5784e8a377347a3c" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>get_type</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a20641bb80200efa83fff629dd680318f" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>handler_type</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1af5bd6b21abc6e41037883f0228269f7b" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>is_open</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1a4b7c9b5d3fe1566ac31d21bcec4c11cf" prot="public" virt="virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>open</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1a71941cf779eae3771c087d767fd8cdc6" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>set_comment_mark</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a3f5df624270906e5bc804924417815d7" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>set_delimiter</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a6c196ffa3d3f81156e3b41efb3019c3f" prot="protected" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>t_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a89fa3d98ff3d04de5d49a42fcb82ca3d" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>write_column_names</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1abc3af661dd1e915bb948f38701ef5e2a" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>write_column_names</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a2517c198799e1879bb13cc83537730c5" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>write_column_names</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1acfe72bf5fb2de2586b128456fdbc220f" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>write_column_vector</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1a2a66dc536657e99eeb0d951e32679f17" prot="public" virt="virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>write_header</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1ada9f77a552df8c65b0e200e1331ff83d" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>write_row</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a3a2b29771be9ed3076d4d9acd5841d36" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>write_row</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter_1a5162af21271a6fd1794c9c9418b706a1" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>write_row</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a4dd34387db002879af9a723444031c4e" prot="public" virt="virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>~FileHandlerBase</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1a4d461f4924beb8585d2306b09a95bfe1" prot="public" virt="virtual"><scope>rlenvscpp::utils::io::CSVWriter</scope><name>~FileWriterBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
