<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="bicycle__vehicle__model__dynamics_8cpp" kind="file" language="C++">
    <compoundname>bicycle_vehicle_model_dynamics.cpp</compoundname>
    <includes refid="bicycle__vehicle__model__dynamics_8h" local="yes">rlenvs/dynamics/bicycle_vehicle_model_dynamics.h</includes>
    <includes refid="std__map__utils_8h" local="yes">rlenvs/utils/std_map_utils.h</includes>
    <incdepgraph>
      <node id="21">
        <label>rlenvs/dynamics/dynamics_matrix_descriptor.h</label>
        <link refid="dynamics__matrix__descriptor_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>iomanip</label>
      </node>
      <node id="10">
        <label>rlenvs/dynamics/system_state.h</label>
        <link refid="system__state_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>stdexcept</label>
      </node>
      <node id="6">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="19">
        <label>boost/noncopyable.hpp</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="22">
        <label>map</label>
      </node>
      <node id="1">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/bicycle_vehicle_model_dynamics.cpp</label>
        <link refid="bicycle__vehicle__model__dynamics_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>rlenvs/rlenvs_consts.h</label>
        <link refid="rlenvs__consts_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ostream</label>
      </node>
      <node id="4">
        <label>rlenvs/rlenvscpp_config.h</label>
        <link refid="rlenvscpp__config_8h_source"/>
      </node>
      <node id="23">
        <label>any</label>
      </node>
      <node id="17">
        <label>rlenvs/dynamics/motion_model_base.h</label>
        <link refid="motion__model__base_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>rlenvs/dynamics/bicycle_vehicle_model_dynamics.h</label>
        <link refid="bicycle__vehicle__model__dynamics_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>rlenvs/utils/std_map_utils.h</label>
        <link refid="std__map__utils_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="12">
        <label>utility</label>
      </node>
      <node id="11">
        <label>array</label>
      </node>
      <node id="3">
        <label>rlenvs/rlenvs_types_v2.h</label>
        <link refid="rlenvs__types__v2_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstddef</label>
      </node>
      <node id="5">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="20">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacerlenvscpp">rlenvscpp</innernamespace>
    <innernamespace refid="namespacerlenvscpp_1_1dynamics">rlenvscpp::dynamics</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;rlenvs/dynamics/bicycle_vehicle_model_dynamics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rlenvs/utils/std_map_utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="namespacerlenvscpp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerlenvscpp" kindref="compound">rlenvscpp</ref>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">dynamics{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="classrlenvscpp_1_1dynamics_1_1BicycleVehicleModelDynamics_1a4b131074e4d9c1097cd73db4adaea6a0" kindref="member">BicycleVehicleModelDynamics::BicycleVehicleModelDynamics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BicycleVehicleModelDynamicsConfig<sp/>config,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SysState&lt;3&gt;&amp;<sp/>init_state)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BicycleVehicleModelDynamics::base_type(init_state),</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config_(config)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="classrlenvscpp_1_1dynamics_1_1BicycleVehicleModelDynamics_1a6ab638edf33af7c563652bf7030a1991" kindref="member">BicycleVehicleModelDynamics::integrate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BicycleVehicleModelDynamics::input_type&amp;<sp/>input<sp/>){</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>old_x<sp/>=<sp/>this-&gt;<ref refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1af26c8b9d7aa6acccb48388a45ea6878a" kindref="member">state_</ref>.<ref refid="classrlenvscpp_1_1dynamics_1_1SysState_1a6ed1a278efdbba35835c1ae30cbcd4f8" kindref="member">get</ref>(</highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>old_y<sp/>=<sp/>this-&gt;<ref refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1af26c8b9d7aa6acccb48388a45ea6878a" kindref="member">state_</ref>.<ref refid="classrlenvscpp_1_1dynamics_1_1SysState_1a6ed1a278efdbba35835c1ae30cbcd4f8" kindref="member">get</ref>(</highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>old_theta<sp/>=<sp/>this-&gt;<ref refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1af26c8b9d7aa6acccb48388a45ea6878a" kindref="member">state_</ref>.<ref refid="classrlenvscpp_1_1dynamics_1_1SysState_1a6ed1a278efdbba35835c1ae30cbcd4f8" kindref="member">get</ref>(</highlight><highlight class="stringliteral">&quot;Theta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dt<sp/>=<sp/>config_.<ref refid="structrlenvscpp_1_1dynamics_1_1BicycleVehicleModelDynamicsConfig_1a2e1d8ee1ae2a5602bc5ed0692b93e756" kindref="member">dt</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>rlenvscpp::utils::template<sp/>resolve&lt;real_t&gt;(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/>input);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>rlenvscpp::utils::template<sp/>resolve&lt;real_t&gt;(</highlight><highlight class="stringliteral">&quot;delta&quot;</highlight><highlight class="normal">,<sp/>input);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>input<sp/>error<sp/>for<sp/>v<sp/>and<sp/>delta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>errors<sp/>=<sp/>rlenvscpp::utils::template<sp/>resolve&lt;std::array&lt;real_t,<sp/>2&gt;&gt;(</highlight><highlight class="stringliteral">&quot;errors&quot;</highlight><highlight class="normal">,<sp/>input);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/><sp/><sp/><sp/>if(this-&gt;allows_matrix_updates()){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>DiffDriveDynamics::input_t<sp/>input(v,w,errors);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>update_matrices(input);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x_new<sp/>=<sp/>old_x<sp/>+<sp/>(v<sp/>+<sp/>errors[0])<sp/>*<sp/>std::cos(old_theta)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>y_new<sp/>=<sp/>old_y<sp/>+<sp/>(v<sp/>+<sp/>errors[0])<sp/>*<sp/>std::sin(old_theta)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>theta_new<sp/>=<sp/>old_theta<sp/>*<sp/>(v<sp/>+<sp/>errors[0])*std::tan(delta<sp/>+<sp/>errors[1])<sp/>*<sp/>dt<sp/>/<sp/>config_.<ref refid="structrlenvscpp_1_1dynamics_1_1BicycleVehicleModelDynamicsConfig_1a1be18229b82a3e0bf4888055018861b6" kindref="member">L</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1af26c8b9d7aa6acccb48388a45ea6878a" kindref="member">state_</ref>[0]<sp/>=<sp/>x_new;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1af26c8b9d7aa6acccb48388a45ea6878a" kindref="member">state_</ref>[1]<sp/>=<sp/>y_new;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1af26c8b9d7aa6acccb48388a45ea6878a" kindref="member">state_</ref>[2]<sp/>=<sp/>theta_new;<sp/></highlight><highlight class="comment">//<sp/>we<sp/>may<sp/>want<sp/>to<sp/>clip<sp/>this<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">BicycleVehicleModelDynamics::state_type&amp;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="classrlenvscpp_1_1dynamics_1_1BicycleVehicleModelDynamics_1a070ca7d87685f5d9faddf7895fcdc51a" kindref="member">BicycleVehicleModelDynamics::evaluate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BicycleVehicleModelDynamics::input_type&amp;<sp/>input<sp/>){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrlenvscpp_1_1dynamics_1_1BicycleVehicleModelDynamics_1a6ab638edf33af7c563652bf7030a1991" kindref="member">integrate</ref>(input);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a08098e5d14d9af91a4bbb644e604eeba" kindref="member">get_state</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="classrlenvscpp_1_1dynamics_1_1BicycleVehicleModelDynamics_1aa71d2511e034dc88e367ba2bf661c18c" kindref="member">BicycleVehicleModelDynamics::initialize_matrices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BicycleVehicleModelDynamics::input_type&amp;<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="classrlenvscpp_1_1dynamics_1_1BicycleVehicleModelDynamics_1a51ae41ba615c79dac0919f9cf18f249d" kindref="member">BicycleVehicleModelDynamics::update_matrices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BicycleVehicleModelDynamics::input_type&amp;<sp/>input)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/bicycle_vehicle_model_dynamics.cpp"/>
  </compounddef>
</doxygen>
