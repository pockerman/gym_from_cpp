<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classrlenvscpp_1_1envs_1_1with__rest__api__mixin" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>rlenvscpp::envs::with_rest_api_mixin</compoundname>
    <includes refid="with__rest__api__mixin_8h" local="no">with_rest_api_mixin.h</includes>
    <templateparamlist>
      <param>
        <type>typename TimeStepType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a5a3a3e1c54c4143f0a97203e0950d7fc" prot="public" static="no">
        <type>TimeStepType</type>
        <definition>typedef TimeStepType rlenvscpp::envs::with_rest_api_mixin&lt; TimeStepType &gt;::time_step_type</definition>
        <argsstring></argsstring>
        <name>time_step_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" line="19" column="22" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a9c82f1a54975f6d83efe516dd0ef9296" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rlenvscpp::envs::with_rest_api_mixin&lt; TimeStepType &gt;::api_url_</definition>
        <argsstring></argsstring>
        <name>api_url_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" line="64" column="13" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a1b9facc9852bd82a992b6cfe1c56b1bf" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rlenvscpp::envs::with_rest_api_mixin&lt; TimeStepType &gt;::resource_path_</definition>
        <argsstring></argsstring>
        <name>resource_path_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" line="65" column="13" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a6b99a36097398db406a95f46eb0d40da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::envs::with_rest_api_mixin&lt; TimeStepType &gt;::with_rest_api_mixin</definition>
        <argsstring>(const std::string &amp;api_url, const std::string &amp;resource_path)</argsstring>
        <name>with_rest_api_mixin</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>api_url</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>resource_path</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" line="24" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1ac023d39e0c842ae0df9c4382eb64c45c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::envs::with_rest_api_mixin&lt; TimeStepType &gt;::with_rest_api_mixin</definition>
        <argsstring>(const with_rest_api_mixin &amp;other)</argsstring>
        <name>with_rest_api_mixin</name>
        <param>
          <type>const <ref refid="classrlenvscpp_1_1envs_1_1with__rest__api__mixin" kindref="compound">with_rest_api_mixin</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy ctor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" line="29" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a92e80caa4e0f938529f861a55345aaca" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual rlenvscpp::envs::with_rest_api_mixin&lt; TimeStepType &gt;::~with_rest_api_mixin</definition>
        <argsstring>()=default</argsstring>
        <name>~with_rest_api_mixin</name>
        <briefdescription>
<para>destructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" line="34" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a094486f21d9af56d5c17fb75d5be17d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>time_step_type</type>
        <definition>virtual time_step_type rlenvscpp::envs::with_rest_api_mixin&lt; TimeStepType &gt;::create_time_step_from_response_</definition>
        <argsstring>(const http::Response &amp;response) const =0</argsstring>
        <name>create_time_step_from_response_</name>
        <param>
          <type>const <ref refid="structhttp_1_1Response" kindref="compound">http::Response</ref> &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>build the time step from the server response </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" line="39" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a5196f40859ba5eaa5e2bdb5b1517b1f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool rlenvscpp::envs::with_rest_api_mixin&lt; TimeStepType &gt;::is_alive</definition>
        <argsstring>() const =0</argsstring>
        <name>is_alive</name>
        <briefdescription>
<para>Query the environment server is the environment has been created. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" line="44" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1aa76fb67f15e481a8267bf68a215f65ba" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rlenvscpp::envs::with_rest_api_mixin&lt; TimeStepType &gt;::get_url</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get_url</name>
        <briefdescription>
<para>Returns the url the environment is using. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" line="49" column="17" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1aa47d75b0a21a00a1536b86b42123aac9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rlenvscpp::envs::with_rest_api_mixin&lt; TimeStepType &gt;::get_api_url</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get_api_url</name>
        <briefdescription>
<para>Returns the url the environment is using. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" line="54" column="17" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1ac88626a771daa8fa6e700003c48967ca" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rlenvscpp::envs::with_rest_api_mixin&lt; TimeStepType &gt;::get_resource_path</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get_resource_path</name>
        <briefdescription>
<para>The resource path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" line="59" column="13" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" bodystart="59" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>class <ref refid="structrlenvscpp_1_1envs_1_1synchronized__env__mixin" kindref="compound">synchronized_env_mixin</ref> </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" line="15" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/with_rest_api_mixin.h" bodystart="16" bodyend="68"/>
    <listofallmembers>
      <member refid="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a9c82f1a54975f6d83efe516dd0ef9296" prot="private" virt="non-virtual"><scope>rlenvscpp::envs::with_rest_api_mixin</scope><name>api_url_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a094486f21d9af56d5c17fb75d5be17d8" prot="public" virt="pure-virtual"><scope>rlenvscpp::envs::with_rest_api_mixin</scope><name>create_time_step_from_response_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1aa47d75b0a21a00a1536b86b42123aac9" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::with_rest_api_mixin</scope><name>get_api_url</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1ac88626a771daa8fa6e700003c48967ca" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::with_rest_api_mixin</scope><name>get_resource_path</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1aa76fb67f15e481a8267bf68a215f65ba" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::with_rest_api_mixin</scope><name>get_url</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a5196f40859ba5eaa5e2bdb5b1517b1f0" prot="public" virt="pure-virtual"><scope>rlenvscpp::envs::with_rest_api_mixin</scope><name>is_alive</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a1b9facc9852bd82a992b6cfe1c56b1bf" prot="private" virt="non-virtual"><scope>rlenvscpp::envs::with_rest_api_mixin</scope><name>resource_path_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a5a3a3e1c54c4143f0a97203e0950d7fc" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::with_rest_api_mixin</scope><name>time_step_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a6b99a36097398db406a95f46eb0d40da" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::with_rest_api_mixin</scope><name>with_rest_api_mixin</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1ac023d39e0c842ae0df9c4382eb64c45c" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::with_rest_api_mixin</scope><name>with_rest_api_mixin</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1with__rest__api__mixin_1a92e80caa4e0f938529f861a55345aaca" prot="public" virt="virtual"><scope>rlenvscpp::envs::with_rest_api_mixin</scope><name>~with_rest_api_mixin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
