<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld" kind="class" language="C++" prot="public" final="yes">
    <compoundname>rlenvscpp::envs::grid_world::Gridworld</compoundname>
    <basecompoundref refid="classrlenvscpp_1_1envs_1_1EnvBase" prot="public" virt="non-virtual">rlenvscpp::envs::EnvBase&lt; TimeStep&lt; detail::board_state_type &gt;, detail::GridWorldEnv&lt; side_size_ &gt; &gt;</basecompoundref>
    <includes refid="grid__world__env_8h" local="no">grid_world_env.h</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <declname>side_size_</declname>
        <defname>side_size_</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a11d592e9a2a5d496ef063a957ca480b1" prot="public" static="no">
        <type><ref refid="classrlenvscpp_1_1envs_1_1EnvBase" kindref="compound">EnvBase</ref>&lt; <ref refid="classrlenvscpp_1_1TimeStep" kindref="compound">TimeStep</ref>&lt; detail::board_state_type &gt;, <ref refid="structrlenvscpp_1_1envs_1_1grid__world_1_1detail_1_1GridWorldEnv" kindref="compound">detail::GridWorldEnv</ref>&lt; side_size_ &gt; &gt;</type>
        <definition>typedef EnvBase&lt;TimeStep&lt;detail::board_state_type&gt;, detail::GridWorldEnv&lt;side_size_&gt; &gt; rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::base_type</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <briefdescription>
<para>The base_type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="306" column="2" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a776b102c748a7def27e7993fb496c3ed" prot="public" static="no">
        <type><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a9d7b5e362a2acd20f6a2e4eb85359a28" kindref="member">base_type::time_step_type</ref></type>
        <definition>typedef base_type::time_step_type rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::time_step_type</definition>
        <argsstring></argsstring>
        <name>time_step_type</name>
        <briefdescription>
<para>The time step type we return every time a step in the environment is performed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="312" column="48" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1aef5f3c13c096d4f97d374e109d757f53" prot="public" static="no">
        <type><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a32b57a9f7a72fdac0033d15159fcdfa8" kindref="member">base_type::state_space_type</ref></type>
        <definition>typedef base_type::state_space_type rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::state_space_type</definition>
        <argsstring></argsstring>
        <name>state_space_type</name>
        <briefdescription>
<para>The type describing the state space for the environment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="317" column="46" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a3255188ed791e13c07d7971389fd8a8b" prot="public" static="no">
        <type><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a1bc17d6a838f0eb39347c104f0c25e88" kindref="member">base_type::action_space_type</ref></type>
        <definition>typedef base_type::action_space_type rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::action_space_type</definition>
        <argsstring></argsstring>
        <name>action_space_type</name>
        <briefdescription>
<para>The type of the action space for the environment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="322" column="47" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1ad02728e8f7443e983227af71eead984b" prot="public" static="no">
        <type>base_type::action_type</type>
        <definition>typedef base_type::action_type rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::action_type</definition>
        <argsstring></argsstring>
        <name>action_type</name>
        <briefdescription>
<para>The type of the action to be undertaken in the environment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="327" column="45" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1adf615d98bc679e3afc43134c18107241" prot="public" static="no">
        <type><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a75f678ad7dc1367058734619e78de120" kindref="member">base_type::state_type</ref></type>
        <definition>typedef base_type::state_type rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::state_type</definition>
        <argsstring></argsstring>
        <name>state_type</name>
        <briefdescription>
<para>The type of the action to be undertaken in the environment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="332" column="44" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a02cb06a15c8da843a89ead2504355cdc" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string rlenvscpp::envs::grid_world::Gridworld&lt; side_size &gt;::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <initializer>= &quot;Gridworld&quot;</initializer>
        <briefdescription>
<para>name </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="290" column="31" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a72abaf5f976239b7d1143c92c496ab30" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>const uint_t rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::n_components</definition>
        <argsstring></argsstring>
        <name>n_components</name>
        <initializer>= 4</initializer>
        <briefdescription>
<para>n_components </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="295" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a2e8fa19f96f67d170a653ba17f52ea39" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>const uint_t rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::side_size</definition>
        <argsstring></argsstring>
        <name>side_size</name>
        <initializer>= side_size_</initializer>
        <briefdescription>
<para>side_size </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="300" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a09086d4b9c38462655641147489735cd" prot="private" static="no" mutable="no">
        <type>GridWorldInitType</type>
        <definition>GridWorldInitType rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::init_mode_</definition>
        <argsstring></argsstring>
        <name>init_mode_</name>
        <briefdescription>
<para>init_mode_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="432" column="23" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a4962e19d4f6f460cf19316b51563a193" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::randomize_state_</definition>
        <argsstring></argsstring>
        <name>randomize_state_</name>
        <briefdescription>
<para>randomize_state_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="437" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1ae4ead9c7e824afaeef6208ecb897569c" prot="private" static="no" mutable="no">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <briefdescription>
<para>seed_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="442" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a18792b7a2eec9de9c0cb4bd73c0bb643" prot="private" static="no" mutable="no">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::noise_factor_</definition>
        <argsstring></argsstring>
        <name>noise_factor_</name>
        <briefdescription>
<para>noise_factor_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="447" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a76f44687a45e9cfe28d4f1c22f6e9f45" prot="private" static="no" mutable="no">
        <type><ref refid="structrlenvscpp_1_1envs_1_1grid__world_1_1detail_1_1board" kindref="compound">detail::board</ref></type>
        <definition>detail::board rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::board_</definition>
        <argsstring></argsstring>
        <name>board_</name>
        <briefdescription>
<para>board_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="452" column="19" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1ab0d3f2bfb600c5175397e7afc2b92f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::Gridworld</definition>
        <argsstring>()</argsstring>
        <name>Gridworld</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="342" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="465" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a761e833d760076877306f4285b573e7f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::Gridworld</definition>
        <argsstring>(const uint_t cidx)</argsstring>
        <name>Gridworld</name>
        <param>
          <type>const <ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
          <declname>cidx</declname>
        </param>
        <briefdescription>
<para><ref refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld" kindref="compound">Gridworld</ref>. Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="347" column="14" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="476" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a4e8b795448ff69542201f6da25be8695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::Gridworld</definition>
        <argsstring>(const Gridworld &amp;other)</argsstring>
        <name>Gridworld</name>
        <param>
          <type>const <ref refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld" kindref="compound">Gridworld</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld" kindref="compound">Gridworld</ref>. Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="352" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="488" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a22f7d84063e8a3d6bd78933d983e90e8" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::make</definition>
        <argsstring>(const std::string &amp;version, const std::unordered_map&lt; std::string, std::any &gt; &amp;options) override final</argsstring>
        <name>make</name>
        <reimplements refid="classrlenvscpp_1_1envs_1_1EnvBase_1aaea68c03f14ca20de8b1617eaadfa422">make</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>version</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; std::string, std::any &gt; &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>make. Builds the environment. Optionally we can choose if the environment will be slippery </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="358" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="502" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1aca32d0d13c519a584817de50ee05d38e" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a776b102c748a7def27e7993fb496c3ed" kindref="member">time_step_type</ref></type>
        <definition>Gridworld&lt; side_size_ &gt;::time_step_type rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::reset</definition>
        <argsstring>(uint_t, const std::unordered_map&lt; std::string, std::any &gt; &amp;) override final</argsstring>
        <name>reset</name>
        <reimplements refid="classrlenvscpp_1_1envs_1_1EnvBase_1ad9caf8e016d511f258ecda9268d9e9c3">reset</reimplements>
        <param>
          <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        </param>
        <param>
          <type>const std::unordered_map&lt; std::string, std::any &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Reset the environment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="365" column="28" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="576" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a788191f0eadc3516e595a3520613c8e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld" kindref="compound">Gridworld</ref></type>
        <definition>Gridworld&lt; side_size_ &gt; rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::make_copy</definition>
        <argsstring>(uint_t cidx) const</argsstring>
        <name>make_copy</name>
        <param>
          <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
          <declname>cidx</declname>
        </param>
        <briefdescription>
<para>Create a new copy of the environment with the given copy index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="373" column="11" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="545" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a9ba912db22ff4c13b4cd7a9fa2a43de0" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a776b102c748a7def27e7993fb496c3ed" kindref="member">time_step_type</ref></type>
        <definition>Gridworld&lt; side_size_ &gt;::time_step_type rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::step</definition>
        <argsstring>(const action_type &amp;action) override final</argsstring>
        <name>step</name>
        <param>
          <type>const <ref refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1ad02728e8f7443e983227af71eead984b" kindref="member">action_type</ref> &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>step </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="380" column="28" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="559" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a489803d7e15992c4b5665807dfa7a298" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::close</definition>
        <argsstring>() override final</argsstring>
        <name>close</name>
        <reimplements refid="classrlenvscpp_1_1envs_1_1EnvBase_1a53051d4a4dfb0adbb14b0d256f6c25d1">close</reimplements>
        <briefdescription>
<para>close </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="385" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="602" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a26851ac0f920d72f0b2bea044d1d7078" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::has_random_state</definition>
        <argsstring>() const noexcept</argsstring>
        <name>has_random_state</name>
        <briefdescription>
<para>has_random_state </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="391" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="391" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a6e5f1e3a47a015900b35f6f498a4d818" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::n_states</definition>
        <argsstring>() const noexcept</argsstring>
        <name>n_states</name>
        <briefdescription>
<para>n_states. Returns the number of states </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="396" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="396" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a79550493a5f219743b0807d9756c4749" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::n_actions</definition>
        <argsstring>() const noexcept</argsstring>
        <name>n_actions</name>
        <briefdescription>
<para>n_actions. Returns the number of actions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="401" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="401" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a870cd1102a468d33aed760da9eb975d4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::seed</definition>
        <argsstring>() const noexcept</argsstring>
        <name>seed</name>
        <briefdescription>
<para>seed </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="407" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="407" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a13678ccd8a51bf7ab1dbc33d9966ed41" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::noise_factor</definition>
        <argsstring>() const noexcept</argsstring>
        <name>noise_factor</name>
        <briefdescription>
<para>noise_factor </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="413" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="413" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1ab5922051c390f12e339223ebe93311e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::is_game_lost</definition>
        <argsstring>() const</argsstring>
        <name>is_game_lost</name>
        <briefdescription>
<para>Returns true if the PLAYER position is the same as the PIT position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="419" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="588" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1abcadb6ad7e45b7df861c84d8f1e2bc57" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>GridWorldInitType</type>
        <definition>GridWorldInitType rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;::init_type</definition>
        <argsstring>() const noexcept</argsstring>
        <name>init_type</name>
        <briefdescription>
<para>init_type </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="425" column="23" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="425" bodyend="425"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld" kindref="compound">Gridworld</ref> class models a square board. There are three ways to initialize the board.<itemizedlist>
<listitem><para>static</para>
</listitem><listitem><para>random</para>
</listitem><listitem><para>player See the GridworldInitType enumeration. Static initialization means that the objects on the board are initialized at the same predetermined locations. Player initialization means that the player is initialized at a random position on the board. Random initialization means that all the objects are placed randomly </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>rlenvscpp::envs::synchronized_env_mixin</label>
        <link refid="structrlenvscpp_1_1envs_1_1synchronized__env__mixin"/>
      </node>
      <node id="2">
        <label>rlenvscpp::envs::EnvBase&lt; TimeStep&lt; detail::board_state_type &gt;, detail::GridWorldEnv&lt; side_size_ &gt; &gt;</label>
        <link refid="classrlenvscpp_1_1envs_1_1EnvBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;</label>
        <link refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>detail::GridWorldEnv&lt; side_size_ &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>rlenvscpp::envs::synchronized_env_mixin</label>
        <link refid="structrlenvscpp_1_1envs_1_1synchronized__env__mixin"/>
      </node>
      <node id="2">
        <label>rlenvscpp::envs::EnvBase&lt; TimeStep&lt; detail::board_state_type &gt;, detail::GridWorldEnv&lt; side_size_ &gt; &gt;</label>
        <link refid="classrlenvscpp_1_1envs_1_1EnvBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rlenvscpp::envs::grid_world::Gridworld&lt; side_size_ &gt;</label>
        <link refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>detail::GridWorldEnv&lt; side_size_ &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" line="279" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h" bodystart="281" bodyend="453"/>
    <listofallmembers>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a3255188ed791e13c07d7971389fd8a8b" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>action_space_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1ad02728e8f7443e983227af71eead984b" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>action_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a11d592e9a2a5d496ef063a957ca480b1" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>base_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a76f44687a45e9cfe28d4f1c22f6e9f45" prot="private" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>board_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a1897dd501bc1980e1cde04b60c012ca8" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>cidx</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a489803d7e15992c4b5665807dfa7a298" prot="public" virt="virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>close</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a568ded9bca962f3ea71727c28f0e3d9f" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>DEFAULT_ENV_SEED</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a4c3153c80c82e905471cfe9598f92508" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>env_name</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a4cb0d72b75df62411b8b7c8820c3a918" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>EnvBase</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1aa7eb0ff71af94db1f48c1b39ebcc29c3" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>EnvBase</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1ab249d79efbef8ac3e1c517736f7fe66a" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>get_current_time_step_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a85b7be84d926406055a60d949a3fe613" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>get_current_time_step_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1ab0d3f2bfb600c5175397e7afc2b92f7e" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>Gridworld</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a761e833d760076877306f4285b573e7f" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>Gridworld</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a4e8b795448ff69542201f6da25be8695" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>Gridworld</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a26851ac0f920d72f0b2bea044d1d7078" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>has_random_state</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a09086d4b9c38462655641147489735cd" prot="private" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>init_mode_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1abcadb6ad7e45b7df861c84d8f1e2bc57" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>init_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1ad6b7d4737dfa8d6b73554d757e6f01b0" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>invalidate_is_created_flag_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1afb93f499d7eeb57a6f31fef89fa6b645" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>is_created</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1ab5922051c390f12e339223ebe93311e4" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>is_game_lost</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a22f7d84063e8a3d6bd78933d983e90e8" prot="public" virt="virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>make</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a788191f0eadc3516e595a3520613c8e3" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>make_copy</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1ac7ba403c4c5046865d373a366ff3fd58" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>make_created_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a79550493a5f219743b0807d9756c4749" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>n_actions</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a72abaf5f976239b7d1143c92c496ab30" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>n_components</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a6e5f1e3a47a015900b35f6f498a4d818" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>n_states</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a02cb06a15c8da843a89ead2504355cdc" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>name</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a13678ccd8a51bf7ab1dbc33d9966ed41" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>noise_factor</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a18792b7a2eec9de9c0cb4bd73c0bb643" prot="private" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>noise_factor_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a4962e19d4f6f460cf19316b51563a193" prot="private" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>randomize_state_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1aca32d0d13c519a584817de50ee05d38e" prot="public" virt="virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>reset</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a0dc609f93cc8dffa2b9ecf65c051ae66" prot="public" virt="non-virtual" ambiguityscope="EnvBase&lt; TimeStep&lt; detail::board_state_type &gt;, detail::GridWorldEnv&lt; side_size_ &gt; &gt;::"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>reset</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a870cd1102a468d33aed760da9eb975d4" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>seed</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1ae4ead9c7e824afaeef6208ecb897569c" prot="private" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>seed_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a3aad75c2321c714eb15d11ddab75ba86" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>set_version_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a2e8fa19f96f67d170a653ba17f52ea39" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>side_size</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1aef5f3c13c096d4f97d374e109d757f53" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>state_space_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1adf615d98bc679e3afc43134c18107241" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>state_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a9ba912db22ff4c13b4cd7a9fa2a43de0" prot="public" virt="virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>step</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a685d86116135ed7cb368c329add2147e" prot="public" virt="pure-virtual" ambiguityscope="EnvBase&lt; TimeStep&lt; detail::board_state_type &gt;, detail::GridWorldEnv&lt; side_size_ &gt; &gt;::"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>step</name></member>
      <member refid="structrlenvscpp_1_1envs_1_1synchronized__env__mixin_1a088ce5412a694ee0844498cf091efcf2" prot="public" virt="virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>sync</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1grid__world_1_1Gridworld_1a776b102c748a7def27e7993fb496c3ed" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>time_step_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1aa7ef6b01e649a3bed482e92efc4eee4f" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>version</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a918429c30af06db020d87543478ec6df" prot="public" virt="virtual"><scope>rlenvscpp::envs::grid_world::Gridworld</scope><name>~EnvBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
