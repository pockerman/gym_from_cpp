<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structbetter__enums_1_1__iterable" kind="struct" language="C++" prot="public">
    <compoundname>better_enums::_iterable</compoundname>
    <templateparamlist>
      <param>
        <type>typename Element</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structbetter__enums_1_1__iterable_1aedd0f1a24a5b98d96eb9a689ceb09133" prot="public" static="no">
        <type>const Element *</type>
        <definition>typedef const Element* better_enums::_iterable&lt; Element &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="432" column="28" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structbetter__enums_1_1__iterable_1a216efec838a3c92c897556f0db43b6bf" prot="private" static="no" mutable="no">
        <type>const Element *const</type>
        <definition>const Element* const better_enums::_iterable&lt; Element &gt;::_array</definition>
        <argsstring></argsstring>
        <name>_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="445" column="28" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbetter__enums_1_1__iterable_1ab23e1e4fd729685cecf2fa6931189d42" prot="private" static="no" mutable="no">
        <type>const std::size_t</type>
        <definition>const std::size_t better_enums::_iterable&lt; Element &gt;::_size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="446" column="29" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structbetter__enums_1_1__iterable_1a33eaf589b35780cb4a494b452dcc1edc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>BETTER_ENUMS_CONSTEXPR_ iterator</type>
        <definition>BETTER_ENUMS_CONSTEXPR_ iterator better_enums::_iterable&lt; Element &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="434" column="38" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="434" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="structbetter__enums_1_1__iterable_1a5ae6805cc8e28ba17c08afd6b5487764" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>BETTER_ENUMS_CONSTEXPR_ iterator</type>
        <definition>BETTER_ENUMS_CONSTEXPR_ iterator better_enums::_iterable&lt; Element &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="435" column="38" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="435" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="structbetter__enums_1_1__iterable_1ab3877289c28c78e5d16b565b5ee424cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>BETTER_ENUMS_CONSTEXPR_ std::size_t</type>
        <definition>BETTER_ENUMS_CONSTEXPR_ std::size_t better_enums::_iterable&lt; Element &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="437" column="41" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="437" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="structbetter__enums_1_1__iterable_1a5c9cd531cdde7a0f0d2b927771bba8c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>BETTER_ENUMS_CONSTEXPR_ const Element &amp;</type>
        <definition>BETTER_ENUMS_CONSTEXPR_ const Element&amp; better_enums::_iterable&lt; Element &gt;::operator[]</definition>
        <argsstring>(std::size_t index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="438" column="43" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="438" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="structbetter__enums_1_1__iterable_1a0c44e8035fbb66814732fb2f8fe2cbdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BETTER_ENUMS_CONSTEXPR_</type>
        <definition>BETTER_ENUMS_CONSTEXPR_ better_enums::_iterable&lt; Element &gt;::_iterable</definition>
        <argsstring>(const Element *array, std::size_t s)</argsstring>
        <name>_iterable</name>
        <param>
          <type>const Element *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="441" column="29" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="441" bodyend="442"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="431" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="431" bodyend="447"/>
    <listofallmembers>
      <member refid="structbetter__enums_1_1__iterable_1a216efec838a3c92c897556f0db43b6bf" prot="private" virt="non-virtual"><scope>better_enums::_iterable</scope><name>_array</name></member>
      <member refid="structbetter__enums_1_1__iterable_1a0c44e8035fbb66814732fb2f8fe2cbdc" prot="public" virt="non-virtual"><scope>better_enums::_iterable</scope><name>_iterable</name></member>
      <member refid="structbetter__enums_1_1__iterable_1ab23e1e4fd729685cecf2fa6931189d42" prot="private" virt="non-virtual"><scope>better_enums::_iterable</scope><name>_size</name></member>
      <member refid="structbetter__enums_1_1__iterable_1a33eaf589b35780cb4a494b452dcc1edc" prot="public" virt="non-virtual"><scope>better_enums::_iterable</scope><name>begin</name></member>
      <member refid="structbetter__enums_1_1__iterable_1a5ae6805cc8e28ba17c08afd6b5487764" prot="public" virt="non-virtual"><scope>better_enums::_iterable</scope><name>end</name></member>
      <member refid="structbetter__enums_1_1__iterable_1aedd0f1a24a5b98d96eb9a689ceb09133" prot="public" virt="non-virtual"><scope>better_enums::_iterable</scope><name>iterator</name></member>
      <member refid="structbetter__enums_1_1__iterable_1a5c9cd531cdde7a0f0d2b927771bba8c8" prot="public" virt="non-virtual"><scope>better_enums::_iterable</scope><name>operator[]</name></member>
      <member refid="structbetter__enums_1_1__iterable_1ab3877289c28c78e5d16b565b5ee424cd" prot="public" virt="non-virtual"><scope>better_enums::_iterable</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
