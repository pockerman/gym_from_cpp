<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase" kind="class" language="C++" prot="public">
    <compoundname>rlenvscpp::utils::io::FileWriterBase</compoundname>
    <basecompoundref refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase" prot="public" virt="non-virtual">rlenvscpp::utils::io::FileHandlerBase&lt; std::ofstream &gt;</basecompoundref>
    <derivedcompoundref refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter" prot="public" virt="non-virtual">rlenvscpp::utils::io::CSVWriter</derivedcompoundref>
    <includes refid="file__writer__base_8h" local="no">file_writer_base.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1adca29d9ab460fad084865225764c5964" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char rlenvscpp::utils::io::FileWriterBase::comment_mark_</definition>
        <argsstring></argsstring>
        <name>comment_mark_</name>
        <briefdescription>
<para>The mark that signifies the beginning of a comment line. The default is #. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" line="72" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1afd7c3e60dc2245cf9e1910ecb11e5ffd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>static char rlenvscpp::utils::io::FileWriterBase::default_comment_mark</definition>
        <argsstring>()</argsstring>
        <name>default_comment_mark</name>
        <briefdescription>
<para>The default comment mark. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" line="26" column="17" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" bodystart="26" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1ac97ba5ca0fdf90c2ba609494164e0bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::utils::io::FileWriterBase::FileWriterBase</definition>
        <argsstring>()=default</argsstring>
        <name>FileWriterBase</name>
        <briefdescription>
<para>Default ctor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1ad329b68f8430a376527c89c48bff4d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::utils::io::FileWriterBase::FileWriterBase</definition>
        <argsstring>(const std::string &amp;file_name, FileFormats::Type t)</argsstring>
        <name>FileWriterBase</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type><ref refid="structrlenvscpp_1_1utils_1_1io_1_1FileFormats_1a49f9121b447504eadba6b60bcfb1be23" kindref="member">FileFormats::Type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Constructor. Construct by passing the name of the file to write into. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" line="37" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.cpp" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1a4d461f4924beb8585d2306b09a95bfe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>rlenvscpp::utils::io::FileWriterBase::~FileWriterBase</definition>
        <argsstring>()</argsstring>
        <name>~FileWriterBase</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" line="42" column="13" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1a4b7c9b5d3fe1566ac31d21bcec4c11cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::io::FileWriterBase::open</definition>
        <argsstring>() override</argsstring>
        <name>open</name>
        <reimplements refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1ad5138c67486131eb95f09ca9f389dbec">open</reimplements>
        <briefdescription>
<para>Open the file for writing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>attempt to split the file name and check if a suffix has been given if yes check if this is the same with the file type</para>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" line="47" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.cpp" bodystart="24" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1ae0d5f7f48df4780c9d365ec9009d2516" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char rlenvscpp::utils::io::FileWriterBase::get_comment_mark</definition>
        <argsstring>() const</argsstring>
        <name>get_comment_mark</name>
        <briefdescription>
<para>Return the mark that signifies the beginning of a comment line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" line="52" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1a71941cf779eae3771c087d767fd8cdc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::io::FileWriterBase::set_comment_mark</definition>
        <argsstring>(char mark)</argsstring>
        <name>set_comment_mark</name>
        <param>
          <type>char</type>
          <declname>mark</declname>
        </param>
        <briefdescription>
<para>Set the comment mark. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" line="57" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1a2a66dc536657e99eeb0d951e32679f17" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::io::FileWriterBase::write_header</definition>
        <argsstring>()</argsstring>
        <name>write_header</name>
        <briefdescription>
<para>Write the header of the file. By default some information such as date and time the file was created is written. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" line="63" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.cpp" bodystart="54" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase" kindref="compound">FileWriterBase</ref> class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>rlenvscpp::utils::io::CSVWriter</label>
        <link refid="classrlenvscpp_1_1utils_1_1io_1_1CSVWriter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rlenvscpp::utils::io::FileWriterBase</label>
        <link refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>boost::noncopyable</label>
      </node>
      <node id="2">
        <label>rlenvscpp::utils::io::FileHandlerBase&lt; std::ofstream &gt;</label>
        <link refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>rlenvscpp::utils::io::FileWriterBase</label>
        <link refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>boost::noncopyable</label>
      </node>
      <node id="2">
        <label>rlenvscpp::utils::io::FileHandlerBase&lt; std::ofstream &gt;</label>
        <link refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" line="18" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/io/file_writer_base.h" bodystart="19" bodyend="74"/>
    <listofallmembers>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a093d2471335ad33a82c419e6f938cad7" prot="public" virt="virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>close</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1adca29d9ab460fad084865225764c5964" prot="protected" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>comment_mark_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1afd7c3e60dc2245cf9e1910ecb11e5ffd" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>default_comment_mark</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a05f4803df34ea07e3be2cff7a647c791" prot="protected" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>f_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1aaf32d2b0b34a855ca41d70b5662c5a98" prot="protected" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>file_name_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a49c92bb502deb480b8c7edbc3de26b18" prot="protected" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>FileHandlerBase</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1ac97ba5ca0fdf90c2ba609494164e0bf3" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>FileWriterBase</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1ad329b68f8430a376527c89c48bff4d25" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>FileWriterBase</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1ae0d5f7f48df4780c9d365ec9009d2516" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>get_comment_mark</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a52dfca851af7c9ada69417f95906f276" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>get_file_stream</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a2b78be19f23ddb54b485c842cc44640e" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>get_file_stream</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1af4922667fec054d4073978d79d07ddfe" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>get_filename</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a25574b0138baa00b5784e8a377347a3c" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>get_type</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a20641bb80200efa83fff629dd680318f" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>handler_type</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1af5bd6b21abc6e41037883f0228269f7b" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>is_open</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1a4b7c9b5d3fe1566ac31d21bcec4c11cf" prot="public" virt="virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>open</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1a71941cf779eae3771c087d767fd8cdc6" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>set_comment_mark</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a6c196ffa3d3f81156e3b41efb3019c3f" prot="protected" virt="non-virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>t_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1a2a66dc536657e99eeb0d951e32679f17" prot="public" virt="virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>write_header</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileHandlerBase_1a4dd34387db002879af9a723444031c4e" prot="public" virt="virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>~FileHandlerBase</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1io_1_1FileWriterBase_1a4d461f4924beb8585d2306b09a95bfe1" prot="public" virt="virtual"><scope>rlenvscpp::utils::io::FileWriterBase</scope><name>~FileWriterBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
