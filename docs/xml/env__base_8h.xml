<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="env__base_8h" kind="file" language="C++">
    <compoundname>env_base.h</compoundname>
    <includes refid="rlenvs__consts_8h" local="yes">rlenvs/rlenvs_consts.h</includes>
    <includes refid="synchronized__env__mixin_8h" local="yes">rlenvs/envs/synchronized_env_mixin.h</includes>
    <includes local="no">boost/noncopyable.hpp</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">any</includes>
    <includes local="no">string</includes>
    <includes local="no">memory</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="connect2__env_8h" local="yes">/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/connect2/connect2_env.h</includedby>
    <includedby refid="gym__walk_8h" local="yes">/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h</includedby>
    <includedby refid="grid__world__env_8h" local="yes">/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h</includedby>
    <includedby refid="quadcopter__sim__env_8h" local="yes">/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gym_pybullet_drones/quadcopter_sim_env.h</includedby>
    <includedby refid="gymnasium__env__base_8h" local="yes">/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/gymnasium_env_base.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/env_base.h</label>
        <link refid="env__base_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>rlenvs/envs/synchronized_env_mixin.h</label>
        <link refid="synchronized__env__mixin_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="13">
        <label>boost/noncopyable.hpp</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="2">
        <label>rlenvs/rlenvs_consts.h</label>
        <link refid="rlenvs__consts_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>rlenvs/rlenvscpp_config.h</label>
        <link refid="rlenvscpp__config_8h_source"/>
      </node>
      <node id="11">
        <label>any</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="3">
        <label>rlenvs/rlenvs_types_v2.h</label>
        <link refid="rlenvs__types__v2_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstddef</label>
      </node>
      <node id="12">
        <label>unordered_map</label>
      </node>
      <node id="5">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="15">
        <label>type_traits</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="18">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/toy_text/taxi_env.h</label>
        <link refid="taxi__env_8h_source"/>
      </node>
      <node id="13">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/classic_control/vector/acrobot_vec_env.h</label>
        <link refid="acrobot__vec__env_8h_source"/>
      </node>
      <node id="5">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gym_pybullet_drones/quadcopter_sim_env.h</label>
        <link refid="quadcopter__sim__env_8h_source"/>
      </node>
      <node id="2">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/connect2/connect2_env.h</label>
        <link refid="connect2__env_8h_source"/>
      </node>
      <node id="1">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/env_base.h</label>
        <link refid="env__base_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/gymnasium_vector_env_base.h</label>
        <link refid="gymnasium__vector__env__base_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/toy_text/black_jack_env.h</label>
        <link refid="black__jack__env_8h_source"/>
      </node>
      <node id="6">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/gymnasium_env_base.h</label>
        <link refid="gymnasium__env__base_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/toy_text/cliff_world_env.h</label>
        <link refid="cliff__world__env_8h_source"/>
      </node>
      <node id="4">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/grid_world/grid_world_env.h</label>
        <link refid="grid__world__env_8h_source"/>
      </node>
      <node id="17">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/toy_text/frozen_lake_env.h</label>
        <link refid="frozen__lake__env_8h_source"/>
      </node>
      <node id="8">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/classic_control/cart_pole_env.h</label>
        <link refid="cart__pole__env_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/classic_control/state_aggregation_cart_pole_env.h</label>
        <link refid="state__aggregation__cart__pole__env_8h_source"/>
      </node>
      <node id="10">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/classic_control/mountain_car_env.h</label>
        <link refid="mountain__car__env_8h_source"/>
      </node>
      <node id="14">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/toy_text/toy_text_base.h</label>
        <link refid="toy__text__base_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/classic_control/acrobot_env.h</label>
        <link refid="acrobot__env_8h_source"/>
      </node>
      <node id="11">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gymnasium/classic_control/pendulum_env.h</label>
        <link refid="pendulum__env_8h_source"/>
      </node>
      <node id="3">
        <label>/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h</label>
        <link refid="gym__walk_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classrlenvscpp_1_1envs_1_1EnvBase" prot="public">rlenvscpp::envs::EnvBase</innerclass>
    <innernamespace refid="namespacerlenvscpp">rlenvscpp</innernamespace>
    <innernamespace refid="namespacerlenvscpp_1_1envs">rlenvscpp::envs</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2024<sp/>&lt;copyright<sp/>holder&gt;<sp/>&lt;email&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ENV_BASE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENV_BASE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rlenvs/rlenvs_consts.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rlenvs/envs/synchronized_env_mixin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rlenvs/rlenvs_consts.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/noncopyable.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;any&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacerlenvscpp" kindref="compound">rlenvscpp</ref>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">envs{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TimeStepType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SpaceType&gt;</highlight></codeline>
<codeline lineno="27" refid="classrlenvscpp_1_1envs_1_1EnvBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrlenvscpp_1_1envs_1_1EnvBase" kindref="compound">EnvBase</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SpaceType,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structrlenvscpp_1_1envs_1_1synchronized__env__mixin" kindref="compound">synchronized_env_mixin</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_default_constructible&lt;TimeStepType&gt;::value<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;TimeStepType<sp/>should<sp/>be<sp/>default<sp/>constructible&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_default_constructible&lt;SpaceType&gt;::value<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;SpaceType<sp/>should<sp/>be<sp/>default<sp/>constructible&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref><sp/>DEFAULT_ENV_SEED<sp/>=<sp/>42;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a9d7b5e362a2acd20f6a2e4eb85359a28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TimeStepType<sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a9d7b5e362a2acd20f6a2e4eb85359a28" kindref="member">time_step_type</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a32b57a9f7a72fdac0033d15159fcdfa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SpaceType::state_space<sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a32b57a9f7a72fdac0033d15159fcdfa8" kindref="member">state_space_type</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a75f678ad7dc1367058734619e78de120" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SpaceType::state_type<sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a75f678ad7dc1367058734619e78de120" kindref="member">state_type</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a1bc17d6a838f0eb39347c104f0c25e88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SpaceType::action_space<sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a1bc17d6a838f0eb39347c104f0c25e88" kindref="member">action_space_type</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a45feccee92313b3a3d636cb288488242" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SpaceType::action_type<sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a45feccee92313b3a3d636cb288488242" kindref="member">action_type</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a918429c30af06db020d87543478ec6df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a918429c30af06db020d87543478ec6df" kindref="member">~EnvBase</ref>()=</highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classrlenvscpp_1_1envs_1_1EnvBase_1aaea68c03f14ca20de8b1617eaadfa422" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1aaea68c03f14ca20de8b1617eaadfa422" kindref="member">make</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1aa7ef6b01e649a3bed482e92efc4eee4f" kindref="member">version</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>std::any&gt;&amp;<sp/>options)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a53051d4a4dfb0adbb14b0d256f6c25d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a53051d4a4dfb0adbb14b0d256f6c25d1" kindref="member">close</ref>()=0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="classrlenvscpp_1_1envs_1_1EnvBase_1ad9caf8e016d511f258ecda9268d9e9c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a9d7b5e362a2acd20f6a2e4eb85359a28" kindref="member">time_step_type</ref><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1ad9caf8e016d511f258ecda9268d9e9c3" kindref="member">reset</ref>(<ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref><sp/>seed,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>std::any&gt;&amp;<sp/>options)=0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a685d86116135ed7cb368c329add2147e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a9d7b5e362a2acd20f6a2e4eb85359a28" kindref="member">time_step_type</ref><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a685d86116135ed7cb368c329add2147e" kindref="member">step</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a45feccee92313b3a3d636cb288488242" kindref="member">action_type</ref>&amp;<sp/>action)=0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a0dc609f93cc8dffa2b9ecf65c051ae66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a9d7b5e362a2acd20f6a2e4eb85359a28" kindref="member">time_step_type</ref><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a0dc609f93cc8dffa2b9ecf65c051ae66" kindref="member">reset</ref>(){</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a0dc609f93cc8dffa2b9ecf65c051ae66" kindref="member">reset</ref>(DEFAULT_ENV_SEED,<sp/>std::unordered_map&lt;std::string,<sp/>std::any&gt;());}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classrlenvscpp_1_1envs_1_1EnvBase_1afb93f499d7eeb57a6f31fef89fa6b645" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1afb93f499d7eeb57a6f31fef89fa6b645" kindref="member">is_created</ref>()const<sp/>noexcept{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_created_;}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classrlenvscpp_1_1envs_1_1EnvBase_1aa7ef6b01e649a3bed482e92efc4eee4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1aa7ef6b01e649a3bed482e92efc4eee4f" kindref="member">version</ref>()const<sp/>noexcept{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>version_;}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a4c3153c80c82e905471cfe9598f92508" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a4c3153c80c82e905471cfe9598f92508" kindref="member">env_name</ref>()const<sp/>noexcept{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name_;}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a1897dd501bc1980e1cde04b60c012ca8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a1897dd501bc1980e1cde04b60c012ca8" kindref="member">cidx</ref>()const<sp/>noexcept{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cidx_;}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a4cb0d72b75df62411b8b7c8820c3a918" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a4cb0d72b75df62411b8b7c8820c3a918" kindref="member">EnvBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a1897dd501bc1980e1cde04b60c012ca8" kindref="member">cidx</ref>=0,<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name=rlenvscpp::consts::INVALID_STR);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="classrlenvscpp_1_1envs_1_1EnvBase_1aa7eb0ff71af94db1f48c1b39ebcc29c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1aa7eb0ff71af94db1f48c1b39ebcc29c3" kindref="member">EnvBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase" kindref="compound">EnvBase</ref>&amp;);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a3aad75c2321c714eb15d11ddab75ba86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a3aad75c2321c714eb15d11ddab75ba86" kindref="member">set_version_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1aa7ef6b01e649a3bed482e92efc4eee4f" kindref="member">version</ref><sp/>)noexcept{version_<sp/>=<sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1aa7ef6b01e649a3bed482e92efc4eee4f" kindref="member">version</ref>;}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>invalidate_is_created_flag_()noexcept{is_created_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classrlenvscpp_1_1envs_1_1EnvBase_1ac7ba403c4c5046865d373a366ff3fd58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1ac7ba403c4c5046865d373a366ff3fd58" kindref="member">make_created_</ref>()noexcept{is_created_=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a9d7b5e362a2acd20f6a2e4eb85359a28" kindref="member">time_step_type</ref>&amp;<sp/>get_current_time_step_()noexcept{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_state_;}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a9d7b5e362a2acd20f6a2e4eb85359a28" kindref="member">time_step_type</ref>&amp;<sp/>get_current_time_step_()const<sp/>noexcept{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_state_;}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_created_;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref><sp/>cidx_;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>version_;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name_;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a9d7b5e362a2acd20f6a2e4eb85359a28" kindref="member">time_step_type</ref><sp/>current_state_;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TimeStepType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SpaceType&gt;</highlight></codeline>
<codeline lineno="176" refid="classrlenvscpp_1_1envs_1_1EnvBase_1a4cb0d72b75df62411b8b7c8820c3a918" refkind="member"><highlight class="normal"><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a4cb0d72b75df62411b8b7c8820c3a918" kindref="member">EnvBase&lt;TimeStepType, SpaceType&gt;::EnvBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref><sp/>cidx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal">SpaceType(),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="structrlenvscpp_1_1envs_1_1synchronized__env__mixin" kindref="compound">synchronized_env_mixin</ref>(),</highlight></codeline>
<codeline lineno="180"><highlight class="normal">is_created_(false),</highlight></codeline>
<codeline lineno="181"><highlight class="normal">cidx_(cidx),</highlight></codeline>
<codeline lineno="182"><highlight class="normal">version_(),</highlight></codeline>
<codeline lineno="183"><highlight class="normal">name_(name),</highlight></codeline>
<codeline lineno="184"><highlight class="normal">current_state_()</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TimeStepType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SpaceType&gt;</highlight></codeline>
<codeline lineno="188" refid="classrlenvscpp_1_1envs_1_1EnvBase_1aa7eb0ff71af94db1f48c1b39ebcc29c3" refkind="member"><highlight class="normal"><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a4cb0d72b75df62411b8b7c8820c3a918" kindref="member">EnvBase&lt;TimeStepType, SpaceType&gt;::EnvBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrlenvscpp_1_1envs_1_1EnvBase" kindref="compound">EnvBase&lt;TimeStepType, SpaceType&gt;</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal">SpaceType(),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="structrlenvscpp_1_1envs_1_1synchronized__env__mixin" kindref="compound">synchronized_env_mixin</ref>(),</highlight></codeline>
<codeline lineno="192"><highlight class="normal">is_created_(other.is_created_),</highlight></codeline>
<codeline lineno="193"><highlight class="normal">cidx_(other.cidx_),</highlight></codeline>
<codeline lineno="194"><highlight class="normal">version_(other.version_),</highlight></codeline>
<codeline lineno="195"><highlight class="normal">name_(other.name_),</highlight></codeline>
<codeline lineno="196"><highlight class="normal">current_state_()</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>ENV_BASE_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/env_base.h"/>
  </compounddef>
</doxygen>
