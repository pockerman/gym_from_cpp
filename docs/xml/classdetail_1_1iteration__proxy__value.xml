<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdetail_1_1iteration__proxy__value" kind="class" language="C++" prot="public">
    <compoundname>detail::iteration_proxy_value</compoundname>
    <templateparamlist>
      <param>
        <type>typename IteratorType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classdetail_1_1iteration__proxy__value_1a3365781ff806e15a1cd99e6d0987c68d" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using detail::iteration_proxy_value&lt; IteratorType &gt;::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5188" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1iteration__proxy__value_1a6d72d5deb611fb7c5c909328b37cd04e" prot="public" static="no">
        <type><ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">iteration_proxy_value</ref></type>
        <definition>using detail::iteration_proxy_value&lt; IteratorType &gt;::value_type =  iteration_proxy_value</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5189" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1iteration__proxy__value_1ac19cd4b8224e83f1c72f48bde9f069be" prot="public" static="no">
        <type><ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">value_type</ref> *</type>
        <definition>using detail::iteration_proxy_value&lt; IteratorType &gt;::pointer =  value_type *</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5190" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1iteration__proxy__value_1a42589c936453407a85968f970556e7cd" prot="public" static="no">
        <type><ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">value_type</ref> &amp;</type>
        <definition>using detail::iteration_proxy_value&lt; IteratorType &gt;::reference =  value_type &amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5191" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1iteration__proxy__value_1ada4177e3926d326dd4f6a3e0b5ae9bfb" prot="public" static="no">
        <type>std::input_iterator_tag</type>
        <definition>using detail::iteration_proxy_value&lt; IteratorType &gt;::iterator_category =  std::input_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5192" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdetail_1_1iteration__proxy__value_1ae24efb92078513900c5576c780f67438" prot="public" static="no">
        <type>typename std::remove_cv&lt; typename std::remove_reference&lt; decltype(std::declval&lt; IteratorType &gt;().<ref refid="classdetail_1_1iteration__proxy__value_1a846b3b53a9c8e45972476f2585bdf0b8" kindref="member">key</ref>()) &gt;::type &gt;::type</type>
        <definition>using detail::iteration_proxy_value&lt; IteratorType &gt;::string_type =  typename std::remove_cv&lt; typename std::remove_reference&lt;decltype( std::declval&lt;IteratorType&gt;().key() ) &gt;::type &gt;::type</definition>
        <argsstring></argsstring>
        <name>string_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5193" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5193" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdetail_1_1iteration__proxy__value_1af1232c7e9d45319bbb20cec7e1d0603f" prot="private" static="no" mutable="no">
        <type>IteratorType</type>
        <definition>IteratorType detail::iteration_proxy_value&lt; IteratorType &gt;::anchor</definition>
        <argsstring></argsstring>
        <name>anchor</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>the iterator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5197" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdetail_1_1iteration__proxy__value_1a7b6227d75cc0762288f880b161ededcc" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t detail::iteration_proxy_value&lt; IteratorType &gt;::array_index</definition>
        <argsstring></argsstring>
        <name>array_index</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>an index for arrays (used to create key names) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5199" column="17" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdetail_1_1iteration__proxy__value_1a785db462502daaf223523a57bfde9c00" prot="private" static="no" mutable="yes">
        <type>std::size_t</type>
        <definition>std::size_t detail::iteration_proxy_value&lt; IteratorType &gt;::array_index_last</definition>
        <argsstring></argsstring>
        <name>array_index_last</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>last stringified array index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5201" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdetail_1_1iteration__proxy__value_1adf1c4348b68bfc8023a74120ac476a75" prot="private" static="no" mutable="yes">
        <type>string_type</type>
        <definition>string_type detail::iteration_proxy_value&lt; IteratorType &gt;::array_index_str</definition>
        <argsstring></argsstring>
        <name>array_index_str</name>
        <initializer>= &quot;0&quot;</initializer>
        <briefdescription>
<para>a string representation of the array index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5203" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdetail_1_1iteration__proxy__value_1a5236087d3cfc2d7cefb42629739bc23a" prot="private" static="no" mutable="no">
        <type>string_type</type>
        <definition>string_type detail::iteration_proxy_value&lt; IteratorType &gt;::empty_str</definition>
        <argsstring></argsstring>
        <name>empty_str</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>an empty string (to return a reference for primitive values) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5205" column="17" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1a5b580524bbd63f3cf538b96ca156a666" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::iteration_proxy_value&lt; IteratorType &gt;::iteration_proxy_value</definition>
        <argsstring>()=default</argsstring>
        <name>iteration_proxy_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5208" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1a527328f3b7fd0335c7bb16fb1b3ec12b" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>detail::iteration_proxy_value&lt; IteratorType &gt;::iteration_proxy_value</definition>
        <argsstring>(IteratorType it, std::size_t array_index_=0) noexcept(std::is_nothrow_move_constructible&lt; IteratorType &gt;::value &amp;&amp;std::is_nothrow_default_constructible&lt; string_type &gt;::value)</argsstring>
        <name>iteration_proxy_value</name>
        <param>
          <type>IteratorType</type>
          <declname>it</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>array_index_</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5209" column="14" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5209" bodyend="5214"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1a0c41d6f7810d152718a9a3e316f74d1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::iteration_proxy_value&lt; IteratorType &gt;::iteration_proxy_value</definition>
        <argsstring>(iteration_proxy_value const &amp;)=default</argsstring>
        <name>iteration_proxy_value</name>
        <param>
          <type><ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">iteration_proxy_value</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5216" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1ad52d2225613c5c64e560b211303bad69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">iteration_proxy_value</ref> &amp;</type>
        <definition>iteration_proxy_value&amp; detail::iteration_proxy_value&lt; IteratorType &gt;::operator=</definition>
        <argsstring>(iteration_proxy_value const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">iteration_proxy_value</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5217" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1a9d77923fa65e59bd4934d1990a4cc6eb" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>detail::iteration_proxy_value&lt; IteratorType &gt;::iteration_proxy_value</definition>
        <argsstring>(iteration_proxy_value &amp;&amp;) noexcept(std::is_nothrow_move_constructible&lt; IteratorType &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; string_type &gt;::value)=default</argsstring>
        <name>iteration_proxy_value</name>
        <param>
          <type><ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">iteration_proxy_value</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5219" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1a3af07dcdad6dffb19de51c9e90471495" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">iteration_proxy_value</ref> &amp;</type>
        <definition>iteration_proxy_value&amp; detail::iteration_proxy_value&lt; IteratorType &gt;::operator=</definition>
        <argsstring>(iteration_proxy_value &amp;&amp;) noexcept(std::is_nothrow_move_assignable&lt; IteratorType &gt;::value &amp;&amp;std::is_nothrow_move_assignable&lt; string_type &gt;::value)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">iteration_proxy_value</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5222" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1ab9d86d12bc52504f6c1f51dea49a3187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::iteration_proxy_value&lt; IteratorType &gt;::~iteration_proxy_value</definition>
        <argsstring>()=default</argsstring>
        <name>~iteration_proxy_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5225" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1afec5712959b5585cefeaadf665d4cf00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">iteration_proxy_value</ref> &amp;</type>
        <definition>const iteration_proxy_value&amp; detail::iteration_proxy_value&lt; IteratorType &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>dereference operator (needed for range-based for) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5228" column="33" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5228" bodyend="5231"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1ac893e777429222afd4fad3530340f98f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">iteration_proxy_value</ref> &amp;</type>
        <definition>iteration_proxy_value&amp; detail::iteration_proxy_value&lt; IteratorType &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>increment operator (needed for range-based for) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5234" column="27" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5234" bodyend="5240"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1a060a2100b3803588aa8693140d507fd8" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type><ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">iteration_proxy_value</ref></type>
        <definition>iteration_proxy_value detail::iteration_proxy_value&lt; IteratorType &gt;::operator++</definition>
        <argsstring>(int) &amp;</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5242" column="27" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5242" bodyend="5248"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1a139d22be442a277268cfb78bb4eef95d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool detail::iteration_proxy_value&lt; IteratorType &gt;::operator==</definition>
        <argsstring>(const iteration_proxy_value &amp;o) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">iteration_proxy_value</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>equality operator (needed for InputIterator) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5251" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5251" bodyend="5254"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1a23745b98de19578adc4efb509e59be28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool detail::iteration_proxy_value&lt; IteratorType &gt;::operator!=</definition>
        <argsstring>(const iteration_proxy_value &amp;o) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classdetail_1_1iteration__proxy__value" kindref="compound">iteration_proxy_value</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>inequality operator (needed for range-based for) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5257" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5257" bodyend="5260"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1a846b3b53a9c8e45972476f2585bdf0b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const string_type &amp;</type>
        <definition>const string_type&amp; detail::iteration_proxy_value&lt; IteratorType &gt;::key</definition>
        <argsstring>() const</argsstring>
        <name>key</name>
        <briefdescription>
<para>return key of the iterator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5263" column="23" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5263" bodyend="5296"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1iteration__proxy__value_1aac08993af9f4f0bf3d058b4beae36a45" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>IteratorType::reference</type>
        <definition>IteratorType::reference detail::iteration_proxy_value&lt; IteratorType &gt;::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
<para>return value of the iterator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5299" column="38" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5299" bodyend="5302"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5185" column="11" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5186" bodyend="5303"/>
    <listofallmembers>
      <member refid="classdetail_1_1iteration__proxy__value_1af1232c7e9d45319bbb20cec7e1d0603f" prot="private" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>anchor</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a7b6227d75cc0762288f880b161ededcc" prot="private" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>array_index</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a785db462502daaf223523a57bfde9c00" prot="private" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>array_index_last</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1adf1c4348b68bfc8023a74120ac476a75" prot="private" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>array_index_str</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a3365781ff806e15a1cd99e6d0987c68d" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>difference_type</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a5236087d3cfc2d7cefb42629739bc23a" prot="private" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>empty_str</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a5b580524bbd63f3cf538b96ca156a666" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>iteration_proxy_value</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a527328f3b7fd0335c7bb16fb1b3ec12b" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>iteration_proxy_value</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a0c41d6f7810d152718a9a3e316f74d1f" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>iteration_proxy_value</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a9d77923fa65e59bd4934d1990a4cc6eb" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>iteration_proxy_value</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1ada4177e3926d326dd4f6a3e0b5ae9bfb" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>iterator_category</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a846b3b53a9c8e45972476f2585bdf0b8" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>key</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a23745b98de19578adc4efb509e59be28" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>operator!=</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1afec5712959b5585cefeaadf665d4cf00" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>operator*</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1ac893e777429222afd4fad3530340f98f" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>operator++</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a060a2100b3803588aa8693140d507fd8" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>operator++</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1ad52d2225613c5c64e560b211303bad69" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>operator=</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a3af07dcdad6dffb19de51c9e90471495" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>operator=</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a139d22be442a277268cfb78bb4eef95d" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>operator==</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1ac19cd4b8224e83f1c72f48bde9f069be" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>pointer</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a42589c936453407a85968f970556e7cd" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>reference</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1ae24efb92078513900c5576c780f67438" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>string_type</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1aac08993af9f4f0bf3d058b4beae36a45" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>value</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1a6d72d5deb611fb7c5c909328b37cd04e" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>value_type</name></member>
      <member refid="classdetail_1_1iteration__proxy__value_1ab9d86d12bc52504f6c1f51dea49a3187" prot="public" virt="non-virtual"><scope>detail::iteration_proxy_value</scope><name>~iteration_proxy_value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
