<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhttp_1_1detail_1_1Socket" kind="class" language="C++" prot="public" final="yes">
    <compoundname>http::Socket</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classhttp_1_1detail_1_1Socket_1a6ac6f2c21b9b886723fcbb3e3fe25aa5" prot="private" static="no" strong="yes">
        <type></type>
        <name>SelectType</name>
        <enumvalue id="classhttp_1_1detail_1_1Socket_1a6ac6f2c21b9b886723fcbb3e3fe25aa5aecae13117d6f0584c25a9da6c8f8415e" prot="private">
          <name>read</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhttp_1_1detail_1_1Socket_1a6ac6f2c21b9b886723fcbb3e3fe25aa5aefb2a684e4afb7d55e6147fbe5a332ee" prot="private">
          <name>write</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="417" column="13" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="418" bodyend="421"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhttp_1_1detail_1_1Socket_1ab07a5a7c670d4ca4a5e423ba1e1cdb0c" prot="public" static="no">
        <type>int</type>
        <definition>using http::detail::Socket::Type =  int</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="248" column="13" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classhttp_1_1detail_1_1Socket_1a1b1d1460f349ccc7d212bb753b4d14af" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr Type</type>
        <definition>constexpr Type http::detail::Socket::invalid</definition>
        <argsstring></argsstring>
        <name>invalid</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="249" column="35" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classhttp_1_1detail_1_1Socket_1a4e6d03f66b63fbdbd79b41ba7a6bdad7" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int http::detail::Socket::noSignal</definition>
        <argsstring></argsstring>
        <name>noSignal</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="488" column="34" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="488" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhttp_1_1detail_1_1Socket_1a1e92107317b92059cb518ffe3f0abaca" prot="private" static="no" mutable="no">
        <type>Type</type>
        <definition>Type http::detail::Socket::endpoint</definition>
        <argsstring></argsstring>
        <name>endpoint</name>
        <initializer>= invalid</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="491" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="491" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhttp_1_1detail_1_1Socket_1a6f8623d0b99371d9ae2ec74d5c530634" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>http::detail::Socket::Socket</definition>
        <argsstring>(const InternetProtocol internetProtocol)</argsstring>
        <name>Socket</name>
        <param>
          <type>const InternetProtocol</type>
          <declname>internetProtocol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="252" column="22" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="252" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classhttp_1_1detail_1_1Socket_1aefbc93ee28bd9207cd9ac5564f08932a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>http::detail::Socket::~Socket</definition>
        <argsstring>()</argsstring>
        <name>~Socket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="290" column="13" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="290" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classhttp_1_1detail_1_1Socket_1a6620c741ee4626238008fd4a0c79a84d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>http::detail::Socket::Socket</definition>
        <argsstring>(Socket &amp;&amp;other) noexcept</argsstring>
        <name>Socket</name>
        <param>
          <type><ref refid="classhttp_1_1detail_1_1Socket" kindref="compound">Socket</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="295" column="13" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="295" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classhttp_1_1detail_1_1Socket_1a05148d885ee9864415a9d269f8473186" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classhttp_1_1detail_1_1Socket" kindref="compound">Socket</ref> &amp;</type>
        <definition>Socket&amp; http::detail::Socket::operator=</definition>
        <argsstring>(Socket &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhttp_1_1detail_1_1Socket" kindref="compound">Socket</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="301" column="20" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="301" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classhttp_1_1detail_1_1Socket_1adfa79697053633c3629e96b2cc4265b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void http::detail::Socket::connect</definition>
        <argsstring>(const struct sockaddr *address, const socklen_t addressSize, const std::int64_t timeout)</argsstring>
        <name>connect</name>
        <param>
          <type>const struct sockaddr *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>const socklen_t</type>
          <declname>addressSize</declname>
        </param>
        <param>
          <type>const std::int64_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="310" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="310" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="classhttp_1_1detail_1_1Socket_1aa795bfef499aafbc8a9dc34ce0a97994" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t http::detail::Socket::send</definition>
        <argsstring>(const void *buffer, const std::size_t length, const std::int64_t timeout)</argsstring>
        <name>send</name>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const std::int64_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="362" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="362" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classhttp_1_1detail_1_1Socket_1a6542a092c9ec3439f322d28e24ccb6d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t http::detail::Socket::recv</definition>
        <argsstring>(void *buffer, const std::size_t length, const std::int64_t timeout)</argsstring>
        <name>recv</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const std::int64_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="389" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="389" bodyend="414"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhttp_1_1detail_1_1Socket_1a2c919de7060777f03c75d225213be165" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void http::detail::Socket::select</definition>
        <argsstring>(const SelectType type, const std::int64_t timeout)</argsstring>
        <name>select</name>
        <param>
          <type>const SelectType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::int64_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="423" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="423" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classhttp_1_1detail_1_1Socket_1a0aa7a90907d7b7cdbee9c297f8a26cd1" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void http::detail::Socket::close</definition>
        <argsstring>() noexcept</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="476" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="476" bodyend="483"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" line="241" column="9" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/HTTPRequest.hpp" bodystart="242" bodyend="492"/>
    <listofallmembers>
      <member refid="classhttp_1_1detail_1_1Socket_1a0aa7a90907d7b7cdbee9c297f8a26cd1" prot="private" virt="non-virtual"><scope>http::Socket</scope><name>close</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1adfa79697053633c3629e96b2cc4265b5" prot="public" virt="non-virtual"><scope>http::Socket</scope><name>connect</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1a1e92107317b92059cb518ffe3f0abaca" prot="private" virt="non-virtual"><scope>http::Socket</scope><name>endpoint</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1a1b1d1460f349ccc7d212bb753b4d14af" prot="public" virt="non-virtual"><scope>http::Socket</scope><name>invalid</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1a4e6d03f66b63fbdbd79b41ba7a6bdad7" prot="private" virt="non-virtual"><scope>http::Socket</scope><name>noSignal</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1a05148d885ee9864415a9d269f8473186" prot="public" virt="non-virtual"><scope>http::Socket</scope><name>operator=</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1a6542a092c9ec3439f322d28e24ccb6d6" prot="public" virt="non-virtual"><scope>http::Socket</scope><name>recv</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1a2c919de7060777f03c75d225213be165" prot="private" virt="non-virtual"><scope>http::Socket</scope><name>select</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1a6ac6f2c21b9b886723fcbb3e3fe25aa5" prot="private" virt="non-virtual"><scope>http::Socket</scope><name>SelectType</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1aa795bfef499aafbc8a9dc34ce0a97994" prot="public" virt="non-virtual"><scope>http::Socket</scope><name>send</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1a6f8623d0b99371d9ae2ec74d5c530634" prot="public" virt="non-virtual"><scope>http::Socket</scope><name>Socket</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1a6620c741ee4626238008fd4a0c79a84d" prot="public" virt="non-virtual"><scope>http::Socket</scope><name>Socket</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1ab07a5a7c670d4ca4a5e423ba1e1cdb0c" prot="public" virt="non-virtual"><scope>http::Socket</scope><name>Type</name></member>
      <member refid="classhttp_1_1detail_1_1Socket_1aefbc93ee28bd9207cd9ac5564f08932a" prot="public" virt="non-virtual"><scope>http::Socket</scope><name>~Socket</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
