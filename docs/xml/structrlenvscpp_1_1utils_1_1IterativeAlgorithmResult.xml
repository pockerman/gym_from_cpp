<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult" kind="struct" language="C++" prot="public">
    <compoundname>rlenvscpp::utils::IterativeAlgorithmResult</compoundname>
    <includes refid="iterative__algorithm__result_8h" local="no">iterative_algorithm_result.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a70a388d82b188fdafdeaec8cd3da03f3" prot="public" static="no" mutable="no">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::utils::IterativeAlgorithmResult::tolerance</definition>
        <argsstring></argsstring>
        <name>tolerance</name>
        <briefdescription>
<para>tolerance </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" line="21" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1ad7affb64a26c6452bf139c938daaa216" prot="public" static="no" mutable="no">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::utils::IterativeAlgorithmResult::residual</definition>
        <argsstring></argsstring>
        <name>residual</name>
        <briefdescription>
<para>residual </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" line="26" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a626c146b565b4092676a56f99769654d" prot="public" static="no" mutable="no">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::utils::IterativeAlgorithmResult::num_iterations</definition>
        <argsstring></argsstring>
        <name>num_iterations</name>
        <briefdescription>
<para>num_iterations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" line="31" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a758af50b4cd22eeb4399ee514241564b" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rlenvscpp::utils::IterativeAlgorithmResult::converged</definition>
        <argsstring></argsstring>
        <name>converged</name>
        <initializer>=false</initializer>
        <briefdescription>
<para>converged </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" line="36" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a6c15d2afbde9cead2ad3248ab48919d9" prot="public" static="no" mutable="no">
        <type>std::chrono::duration&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt;</type>
        <definition>std::chrono::duration&lt;real_t&gt; rlenvscpp::utils::IterativeAlgorithmResult::total_time</definition>
        <argsstring></argsstring>
        <name>total_time</name>
        <briefdescription>
<para>total_time </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" line="41" column="27" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a9d9f90e4ac96dffe7e62e77b103a7673" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt;</type>
        <definition>std::vector&lt;real_t&gt; rlenvscpp::utils::IterativeAlgorithmResult::residuals</definition>
        <argsstring></argsstring>
        <name>residuals</name>
        <briefdescription>
<para>residuals </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" line="46" column="17" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1afcbb01d66c6abc04aa6b3eff838eef7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::utils::IterativeAlgorithmResult::IterativeAlgorithmResult</definition>
        <argsstring>()=default</argsstring>
        <name>IterativeAlgorithmResult</name>
        <briefdescription>
<para><ref refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult" kindref="compound">IterativeAlgorithmResult</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" line="51" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a89bc6faad4667a61ea8b053b653bfc82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::utils::IterativeAlgorithmResult::IterativeAlgorithmResult</definition>
        <argsstring>(real_t tol, real_t res, uint_t nitrs, std::chrono::duration&lt; real_t &gt; time)</argsstring>
        <name>IterativeAlgorithmResult</name>
        <param>
          <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
          <declname>tol</declname>
        </param>
        <param>
          <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
          <declname>res</declname>
        </param>
        <param>
          <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
          <declname>nitrs</declname>
        </param>
        <param>
          <type>std::chrono::duration&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para><ref refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult" kindref="compound">IterativeAlgorithmResult</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" line="56" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.cpp" bodystart="6" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a00d5a6f6862d0e30e9b267c7520afd30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; rlenvscpp::utils::IterativeAlgorithmResult::print</definition>
        <argsstring>(std::ostream &amp;out) const</argsstring>
        <name>print</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>print </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" line="62" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.cpp" bodystart="16" bodyend="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult" kindref="compound">IterativeAlgorithmResult</ref> struct. Helper struct to assemble the result of an iterative algorithm. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" line="16" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_result.h" bodystart="16" bodyend="63"/>
    <listofallmembers>
      <member refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a758af50b4cd22eeb4399ee514241564b" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmResult</scope><name>converged</name></member>
      <member refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1afcbb01d66c6abc04aa6b3eff838eef7a" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmResult</scope><name>IterativeAlgorithmResult</name></member>
      <member refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a89bc6faad4667a61ea8b053b653bfc82" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmResult</scope><name>IterativeAlgorithmResult</name></member>
      <member refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a626c146b565b4092676a56f99769654d" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmResult</scope><name>num_iterations</name></member>
      <member refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a00d5a6f6862d0e30e9b267c7520afd30" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmResult</scope><name>print</name></member>
      <member refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1ad7affb64a26c6452bf139c938daaa216" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmResult</scope><name>residual</name></member>
      <member refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a9d9f90e4ac96dffe7e62e77b103a7673" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmResult</scope><name>residuals</name></member>
      <member refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a70a388d82b188fdafdeaec8cd3da03f3" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmResult</scope><name>tolerance</name></member>
      <member refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult_1a6c15d2afbde9cead2ad3248ab48919d9" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmResult</scope><name>total_time</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
