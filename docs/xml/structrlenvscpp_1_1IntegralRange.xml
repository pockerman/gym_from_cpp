<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structrlenvscpp_1_1IntegralRange" kind="struct" language="C++" prot="public">
    <compoundname>rlenvscpp::IntegralRange</compoundname>
    <includes refid="rlenvs__types__v2_8h" local="no">rlenvs_types_v2.h</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <declname>s</declname>
        <defname>s</defname>
      </param>
      <param>
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <declname>e</declname>
        <defname>e</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structrlenvscpp_1_1IntegralRange_1a1eb10bbbda5d5a41062098dc0dc34ef7" prot="public" static="no">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>typedef uint_t rlenvscpp::IntegralRange&lt; s, e &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_types_v2.h" line="102" column="16" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_types_v2.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structrlenvscpp_1_1IntegralRange_1a5a8216f9135e755d85d19125d2a57caf" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>constexpr uint_t rlenvscpp::IntegralRange&lt; s, e &gt;::S</definition>
        <argsstring></argsstring>
        <name>S</name>
        <initializer>= s</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_types_v2.h" line="103" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_types_v2.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrlenvscpp_1_1IntegralRange_1a6d8f304051e41072652e048d742b11ee" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>constexpr uint_t rlenvscpp::IntegralRange&lt; s, e &gt;::E</definition>
        <argsstring></argsstring>
        <name>E</name>
        <initializer>= e</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_types_v2.h" line="104" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_types_v2.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrlenvscpp_1_1IntegralRange_1a62c2ee1b35acbc2cbfdc301e4ecb3d64" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>constexpr uint_t rlenvscpp::IntegralRange&lt; s, e &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <initializer>= e - s</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_types_v2.h" line="105" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_types_v2.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A range of double precision floating point values. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_types_v2.h" line="100" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_types_v2.h" bodystart="101" bodyend="106"/>
    <listofallmembers>
      <member refid="structrlenvscpp_1_1IntegralRange_1a6d8f304051e41072652e048d742b11ee" prot="public" virt="non-virtual"><scope>rlenvscpp::IntegralRange</scope><name>E</name></member>
      <member refid="structrlenvscpp_1_1IntegralRange_1a5a8216f9135e755d85d19125d2a57caf" prot="public" virt="non-virtual"><scope>rlenvscpp::IntegralRange</scope><name>S</name></member>
      <member refid="structrlenvscpp_1_1IntegralRange_1a62c2ee1b35acbc2cbfdc301e4ecb3d64" prot="public" virt="non-virtual"><scope>rlenvscpp::IntegralRange</scope><name>size</name></member>
      <member refid="structrlenvscpp_1_1IntegralRange_1a1eb10bbbda5d5a41062098dc0dc34ef7" prot="public" virt="non-virtual"><scope>rlenvscpp::IntegralRange</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
