<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController" kind="class" language="C++" prot="public">
    <compoundname>rlenvscpp::utils::IterativeAlgorithmController</compoundname>
    <includes refid="iterative__algorithm__controller_8h" local="no">iterative_algorithm_controller.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a829f4b7ad1f531f1dbfeb03a9fc05c24" prot="private" static="no" mutable="no">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::utils::IterativeAlgorithmController::max_iterations_</definition>
        <argsstring></argsstring>
        <name>max_iterations_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="142" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a5e9d54ff2b510658311887ef8047395a" prot="private" static="no" mutable="no">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::utils::IterativeAlgorithmController::exit_tolerance_</definition>
        <argsstring></argsstring>
        <name>exit_tolerance_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="143" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a42c7cf58cf18535ceab1069782a81ee3" prot="private" static="no" mutable="no">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::utils::IterativeAlgorithmController::current_iteration_idx_</definition>
        <argsstring></argsstring>
        <name>current_iteration_idx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="144" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1aeb2ed9e349580167870c773156a27a80" prot="private" static="no" mutable="no">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::utils::IterativeAlgorithmController::n_threads_</definition>
        <argsstring></argsstring>
        <name>n_threads_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="145" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a69f26d416bf416fafe9777066ee80c02" prot="private" static="no" mutable="no">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::utils::IterativeAlgorithmController::current_res_</definition>
        <argsstring></argsstring>
        <name>current_res_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="146" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1ae0d4ca17b94a75423e0efc82b6f78336" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rlenvscpp::utils::IterativeAlgorithmController::show_iterations_</definition>
        <argsstring></argsstring>
        <name>show_iterations_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="147" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a1b0c99352f530a5fd0aa78e6ce0eb5c6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rlenvscpp::utils::IterativeAlgorithmController::track_residuals_</definition>
        <argsstring></argsstring>
        <name>track_residuals_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="148" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1aa5291edff32a8ccf148735ac3de95480" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::utils::IterativeAlgorithmController::IterativeAlgorithmController</definition>
        <argsstring>(uint_t maxIterations, real_t exitTolerance)</argsstring>
        <name>IterativeAlgorithmController</name>
        <param>
          <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
          <declname>maxIterations</declname>
        </param>
        <param>
          <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
          <declname>exitTolerance</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="22" column="4" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="153" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a2ea48e44f080581fa8ee0db38ad94522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::utils::IterativeAlgorithmController::IterativeAlgorithmController</definition>
        <argsstring>(const IterativeAlgorithmController &amp;)=default</argsstring>
        <name>IterativeAlgorithmController</name>
        <param>
          <type>const <ref refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController" kindref="compound">IterativeAlgorithmController</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="27" column="4"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1ac6cbaa05fbaab3ffc584e762bd3efc64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::utils::IterativeAlgorithmController::IterativeAlgorithmController</definition>
        <argsstring>(IterativeAlgorithmController &amp;&amp;)=default</argsstring>
        <name>IterativeAlgorithmController</name>
        <param>
          <type><ref refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController" kindref="compound">IterativeAlgorithmController</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Move copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="32" column="4"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a44745d894a915b6ec94cb90a30833313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController" kindref="compound">IterativeAlgorithmController</ref> &amp;</type>
        <definition>IterativeAlgorithmController&amp; rlenvscpp::utils::IterativeAlgorithmController::operator=</definition>
        <argsstring>(const IterativeAlgorithmController &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController" kindref="compound">IterativeAlgorithmController</ref> &amp;</type>
        </param>
        <briefdescription>
<para>copy assignement </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="37" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a683be3b453de95b0095cf3fac6da84de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController" kindref="compound">IterativeAlgorithmController</ref> &amp;</type>
        <definition>IterativeAlgorithmController&amp; rlenvscpp::utils::IterativeAlgorithmController::operator=</definition>
        <argsstring>(IterativeAlgorithmController &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController" kindref="compound">IterativeAlgorithmController</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>move copy assignement </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="42" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1ac5ad8baede46e946afdc36f27f72cef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::utils::IterativeAlgorithmController::~IterativeAlgorithmController</definition>
        <argsstring>()=default</argsstring>
        <name>~IterativeAlgorithmController</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="47" column="4"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a874dc79f9368166a96582ab84a64e9bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlenvscpp::utils::IterativeAlgorithmController::continue_iterations</definition>
        <argsstring>()</argsstring>
        <name>continue_iterations</name>
        <briefdescription>
<para>Returns true if the iterations of the algorithm should be continued. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="52" column="9" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.cpp" bodystart="18" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1aeebb52753ac78e947d325c60d7b4eee0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlenvscpp::utils::IterativeAlgorithmController::show_iterations</definition>
        <argsstring>() const</argsstring>
        <name>show_iterations</name>
        <briefdescription>
<para>show iterations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="57" column="9" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a379e3548514a228e743a3f827833b001" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlenvscpp::utils::IterativeAlgorithmController::track_residuals</definition>
        <argsstring>() const</argsstring>
        <name>track_residuals</name>
        <briefdescription>
<para>track_residuals </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="63" column="9" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1ae904526d56ee35e86ed2c4d42f3a0345" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::IterativeAlgorithmController::set_tolerance</definition>
        <argsstring>(real_t tol)</argsstring>
        <name>set_tolerance</name>
        <param>
          <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
          <declname>tol</declname>
        </param>
        <briefdescription>
<para>set_tolerance </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tol</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="69" column="9" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a75a5bd34329697d5e389b46c533e9e25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::IterativeAlgorithmController::set_show_iterations_flag</definition>
        <argsstring>(bool flag)</argsstring>
        <name>set_show_iterations_flag</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>show iterations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="74" column="9" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1afb6b55036ca3bb94c6eecad928fde389" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::IterativeAlgorithmController::set_track_residuals_flag</definition>
        <argsstring>(bool flag)</argsstring>
        <name>set_track_residuals_flag</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>set_track_residuals_flag </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="80" column="9" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a5c5472aec12b0f9e8a5fdd4f6cc576a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::IterativeAlgorithmController::set_num_threads</definition>
        <argsstring>(uint_t nthreads)</argsstring>
        <name>set_num_threads</name>
        <param>
          <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
          <declname>nthreads</declname>
        </param>
        <briefdescription>
<para>Set the number of threads. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="85" column="9" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1ae1aadc71fe44d1f97ce6d7cfc28a0d26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::IterativeAlgorithmController::set_max_itrs</definition>
        <argsstring>(uint_t max_itrs)</argsstring>
        <name>set_max_itrs</name>
        <param>
          <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
          <declname>max_itrs</declname>
        </param>
        <briefdescription>
<para>set_max_itrs </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_itrs</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="91" column="9" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1aff16507ef967e51c1028d2cc9089780d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::utils::IterativeAlgorithmController::get_current_iteration</definition>
        <argsstring>() const</argsstring>
        <name>get_current_iteration</name>
        <briefdescription>
<para>Returns the current iteration index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="96" column="11" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a54df2381e0d88fcc93de3bbef57ad85a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::utils::IterativeAlgorithmController::get_exit_tolerance</definition>
        <argsstring>() const</argsstring>
        <name>get_exit_tolerance</name>
        <briefdescription>
<para>Returns the exit tolerance for the algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="101" column="11" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a7dd8e82f198994cb7afefb202df46de3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::utils::IterativeAlgorithmController::get_max_iterations</definition>
        <argsstring>() const</argsstring>
        <name>get_max_iterations</name>
        <briefdescription>
<para>Return the maximum number of iterations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="106" column="11" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a77d6b2a53bf30fa63ec2bc25ec7b58c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::utils::IterativeAlgorithmController::get_num_threads</definition>
        <argsstring>() const</argsstring>
        <name>get_num_threads</name>
        <briefdescription>
<para>Get the number of threads used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="111" column="11" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a9c500462801af9270e3c05e344fb307b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::utils::IterativeAlgorithmController::get_residual</definition>
        <argsstring>() const</argsstring>
        <name>get_residual</name>
        <briefdescription>
<para>get_residual </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="117" column="11" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1aa6c36e441c314a0f26ebe7b9a01b343d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structrlenvscpp_1_1utils_1_1IterativeAlgorithmResult" kindref="compound">IterativeAlgorithmResult</ref></type>
        <definition>IterativeAlgorithmResult rlenvscpp::utils::IterativeAlgorithmController::get_state</definition>
        <argsstring>() const</argsstring>
        <name>get_state</name>
        <briefdescription>
<para>Returns the state of the controller. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="122" column="29" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.cpp" bodystart="7" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a4ed333773b5bc7cc7becd15f7ef46917" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::IterativeAlgorithmController::update_residual</definition>
        <argsstring>(real_t res)</argsstring>
        <name>update_residual</name>
        <param>
          <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>Update the residual. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="127" column="9" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1ac41d6fc7838b6d8f131840f921b660d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::IterativeAlgorithmController::reset</definition>
        <argsstring>(const IterativeAlgorithmController &amp;control)</argsstring>
        <name>reset</name>
        <param>
          <type>const <ref refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController" kindref="compound">IterativeAlgorithmController</ref> &amp;</type>
          <declname>control</declname>
        </param>
        <briefdescription>
<para>reset </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="132" column="9" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.cpp" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a1789cee90b7505732d96cbaac65aecf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::utils::IterativeAlgorithmController::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>reset </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="137" column="9" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.cpp" bodystart="43" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Controller for iterative algorithms. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" line="15" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/utils/iterative_algorithm_controller.h" bodystart="16" bodyend="150"/>
    <listofallmembers>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a874dc79f9368166a96582ab84a64e9bf" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>continue_iterations</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a42c7cf58cf18535ceab1069782a81ee3" prot="private" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>current_iteration_idx_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a69f26d416bf416fafe9777066ee80c02" prot="private" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>current_res_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a5e9d54ff2b510658311887ef8047395a" prot="private" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>exit_tolerance_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1aff16507ef967e51c1028d2cc9089780d" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>get_current_iteration</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a54df2381e0d88fcc93de3bbef57ad85a" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>get_exit_tolerance</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a7dd8e82f198994cb7afefb202df46de3" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>get_max_iterations</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a77d6b2a53bf30fa63ec2bc25ec7b58c2" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>get_num_threads</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a9c500462801af9270e3c05e344fb307b" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>get_residual</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1aa6c36e441c314a0f26ebe7b9a01b343d" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>get_state</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1aa5291edff32a8ccf148735ac3de95480" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>IterativeAlgorithmController</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a2ea48e44f080581fa8ee0db38ad94522" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>IterativeAlgorithmController</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1ac6cbaa05fbaab3ffc584e762bd3efc64" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>IterativeAlgorithmController</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a829f4b7ad1f531f1dbfeb03a9fc05c24" prot="private" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>max_iterations_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1aeb2ed9e349580167870c773156a27a80" prot="private" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>n_threads_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a44745d894a915b6ec94cb90a30833313" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>operator=</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a683be3b453de95b0095cf3fac6da84de" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>operator=</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1ac41d6fc7838b6d8f131840f921b660d9" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>reset</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a1789cee90b7505732d96cbaac65aecf5" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>reset</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1ae1aadc71fe44d1f97ce6d7cfc28a0d26" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>set_max_itrs</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a5c5472aec12b0f9e8a5fdd4f6cc576a0" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>set_num_threads</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a75a5bd34329697d5e389b46c533e9e25" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>set_show_iterations_flag</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1ae904526d56ee35e86ed2c4d42f3a0345" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>set_tolerance</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1afb6b55036ca3bb94c6eecad928fde389" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>set_track_residuals_flag</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1aeebb52753ac78e947d325c60d7b4eee0" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>show_iterations</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1ae0d4ca17b94a75423e0efc82b6f78336" prot="private" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>show_iterations_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a379e3548514a228e743a3f827833b001" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>track_residuals</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a1b0c99352f530a5fd0aa78e6ce0eb5c6" prot="private" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>track_residuals_</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1a4ed333773b5bc7cc7becd15f7ef46917" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>update_residual</name></member>
      <member refid="classrlenvscpp_1_1utils_1_1IterativeAlgorithmController_1ac5ad8baede46e946afdc36f27f72cef9" prot="public" virt="non-virtual"><scope>rlenvscpp::utils::IterativeAlgorithmController</scope><name>~IterativeAlgorithmController</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
