<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classbyte__container__with__subtype" kind="class" language="C++" prot="public">
    <compoundname>byte_container_with_subtype</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BinaryType</basecompoundref>
    <includes refid="json_8hpp" local="no">json.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename BinaryType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classbyte__container__with__subtype_1a29aa3b98709ae1fcdaf8b55766935c08" prot="public" static="no">
        <type>BinaryType</type>
        <definition>using byte_container_with_subtype&lt; BinaryType &gt;::container_type =  BinaryType</definition>
        <argsstring></argsstring>
        <name>container_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5894" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5894" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classbyte__container__with__subtype_1a1b423c8cd161e67e1af1c72bbc2c8b90" prot="public" static="no">
        <type>std::uint64_t</type>
        <definition>using byte_container_with_subtype&lt; BinaryType &gt;::subtype_type =  std::uint64_t</definition>
        <argsstring></argsstring>
        <name>subtype_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5895" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5895" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbyte__container__with__subtype_1a94874c7df81726e0d88c5d4d2a3e3adf" prot="private" static="no" mutable="no">
        <type>subtype_type</type>
        <definition>subtype_type byte_container_with_subtype&lt; BinaryType &gt;::m_subtype</definition>
        <argsstring></argsstring>
        <name>m_subtype</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5968" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5968" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbyte__container__with__subtype_1ad134bcb2226d949a4b40b43cfbd6d63f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool byte_container_with_subtype&lt; BinaryType &gt;::m_has_subtype</definition>
        <argsstring></argsstring>
        <name>m_has_subtype</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5969" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5969" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbyte__container__with__subtype_1a17bc4a2dabb6c7a5ec2cba3f3aaf0431" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>byte_container_with_subtype&lt; BinaryType &gt;::byte_container_with_subtype</definition>
        <argsstring>() noexcept(noexcept(container_type()))</argsstring>
        <name>byte_container_with_subtype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://json.nlohmann.me/api/byte_container_with_subtype/byte_container_with_subtype/">https://json.nlohmann.me/api/byte_container_with_subtype/byte_container_with_subtype/</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5898" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5898" bodyend="5900"/>
      </memberdef>
      <memberdef kind="function" id="classbyte__container__with__subtype_1a7f9fb60d4a835e97fbf1c2de7fa382e2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>byte_container_with_subtype&lt; BinaryType &gt;::byte_container_with_subtype</definition>
        <argsstring>(const container_type &amp;b) noexcept(noexcept(container_type(b)))</argsstring>
        <name>byte_container_with_subtype</name>
        <param>
          <type>const container_type &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://json.nlohmann.me/api/byte_container_with_subtype/byte_container_with_subtype/">https://json.nlohmann.me/api/byte_container_with_subtype/byte_container_with_subtype/</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5903" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5903" bodyend="5905"/>
      </memberdef>
      <memberdef kind="function" id="classbyte__container__with__subtype_1a42b8b66b00eb5c0057d4420e196dadf0" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>byte_container_with_subtype&lt; BinaryType &gt;::byte_container_with_subtype</definition>
        <argsstring>(container_type &amp;&amp;b) noexcept(noexcept(container_type(std::move(b))))</argsstring>
        <name>byte_container_with_subtype</name>
        <param>
          <type>container_type &amp;&amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://json.nlohmann.me/api/byte_container_with_subtype/byte_container_with_subtype/">https://json.nlohmann.me/api/byte_container_with_subtype/byte_container_with_subtype/</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5908" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5908" bodyend="5910"/>
      </memberdef>
      <memberdef kind="function" id="classbyte__container__with__subtype_1a759c6a582dd0684adf7fb9641ef586a4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>byte_container_with_subtype&lt; BinaryType &gt;::byte_container_with_subtype</definition>
        <argsstring>(const container_type &amp;b, subtype_type subtype_) noexcept(noexcept(container_type(b)))</argsstring>
        <name>byte_container_with_subtype</name>
        <param>
          <type>const container_type &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>subtype_type</type>
          <declname>subtype_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://json.nlohmann.me/api/byte_container_with_subtype/byte_container_with_subtype/">https://json.nlohmann.me/api/byte_container_with_subtype/byte_container_with_subtype/</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5913" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5913" bodyend="5917"/>
      </memberdef>
      <memberdef kind="function" id="classbyte__container__with__subtype_1a3b43bde08a4bff8917bcfad01d9e6089" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>byte_container_with_subtype&lt; BinaryType &gt;::byte_container_with_subtype</definition>
        <argsstring>(container_type &amp;&amp;b, subtype_type subtype_) noexcept(noexcept(container_type(std::move(b))))</argsstring>
        <name>byte_container_with_subtype</name>
        <param>
          <type>container_type &amp;&amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>subtype_type</type>
          <declname>subtype_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://json.nlohmann.me/api/byte_container_with_subtype/byte_container_with_subtype/">https://json.nlohmann.me/api/byte_container_with_subtype/byte_container_with_subtype/</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5920" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5920" bodyend="5924"/>
      </memberdef>
      <memberdef kind="function" id="classbyte__container__with__subtype_1a263d63d0a518cfe9a6b6e508f9a22e85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool byte_container_with_subtype&lt; BinaryType &gt;::operator==</definition>
        <argsstring>(const byte_container_with_subtype &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classbyte__container__with__subtype" kindref="compound">byte_container_with_subtype</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5926" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5926" bodyend="5930"/>
      </memberdef>
      <memberdef kind="function" id="classbyte__container__with__subtype_1a07f26c9ed1e216c1c3a1a286b9c4c197" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool byte_container_with_subtype&lt; BinaryType &gt;::operator!=</definition>
        <argsstring>(const byte_container_with_subtype &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classbyte__container__with__subtype" kindref="compound">byte_container_with_subtype</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5932" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5932" bodyend="5935"/>
      </memberdef>
      <memberdef kind="function" id="classbyte__container__with__subtype_1aa211ecfe3f0a626e96c54ea7e160491b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void byte_container_with_subtype&lt; BinaryType &gt;::set_subtype</definition>
        <argsstring>(subtype_type subtype_) noexcept</argsstring>
        <name>set_subtype</name>
        <param>
          <type>subtype_type</type>
          <declname>subtype_</declname>
        </param>
        <briefdescription>
<para>sets the binary subtype </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://json.nlohmann.me/api/byte_container_with_subtype/set_subtype/">https://json.nlohmann.me/api/byte_container_with_subtype/set_subtype/</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5939" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5939" bodyend="5943"/>
      </memberdef>
      <memberdef kind="function" id="classbyte__container__with__subtype_1a678460360dd494c33fbfde782e7c8201" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr subtype_type</type>
        <definition>constexpr subtype_type byte_container_with_subtype&lt; BinaryType &gt;::subtype</definition>
        <argsstring>() const noexcept</argsstring>
        <name>subtype</name>
        <briefdescription>
<para>return the binary subtype </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://json.nlohmann.me/api/byte_container_with_subtype/subtype/">https://json.nlohmann.me/api/byte_container_with_subtype/subtype/</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5947" column="28" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5947" bodyend="5950"/>
      </memberdef>
      <memberdef kind="function" id="classbyte__container__with__subtype_1a793fab04ad06741b6909dde032d9ea35" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool byte_container_with_subtype&lt; BinaryType &gt;::has_subtype</definition>
        <argsstring>() const noexcept</argsstring>
        <name>has_subtype</name>
        <briefdescription>
<para>return whether the value has a subtype </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://json.nlohmann.me/api/byte_container_with_subtype/has_subtype/">https://json.nlohmann.me/api/byte_container_with_subtype/has_subtype/</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5954" column="20" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5954" bodyend="5957"/>
      </memberdef>
      <memberdef kind="function" id="classbyte__container__with__subtype_1ad18f6a7557a2bfce28f1ed8d4d10607c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void byte_container_with_subtype&lt; BinaryType &gt;::clear_subtype</definition>
        <argsstring>() noexcept</argsstring>
        <name>clear_subtype</name>
        <briefdescription>
<para>clears the binary subtype </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://json.nlohmann.me/api/byte_container_with_subtype/clear_subtype/">https://json.nlohmann.me/api/byte_container_with_subtype/clear_subtype/</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5961" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5961" bodyend="5965"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>an internal type for a backed binary type </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://json.nlohmann.me/api/byte_container_with_subtype/">https://json.nlohmann.me/api/byte_container_with_subtype/</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>byte_container_with_subtype&lt; BinaryType &gt;</label>
        <link refid="classbyte__container__with__subtype"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BinaryType</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>byte_container_with_subtype&lt; BinaryType &gt;</label>
        <link refid="classbyte__container__with__subtype"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BinaryType</label>
      </node>
    </collaborationgraph>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="5891" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="5892" bodyend="5970"/>
    <listofallmembers>
      <member refid="classbyte__container__with__subtype_1a17bc4a2dabb6c7a5ec2cba3f3aaf0431" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>byte_container_with_subtype</name></member>
      <member refid="classbyte__container__with__subtype_1a7f9fb60d4a835e97fbf1c2de7fa382e2" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>byte_container_with_subtype</name></member>
      <member refid="classbyte__container__with__subtype_1a42b8b66b00eb5c0057d4420e196dadf0" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>byte_container_with_subtype</name></member>
      <member refid="classbyte__container__with__subtype_1a759c6a582dd0684adf7fb9641ef586a4" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>byte_container_with_subtype</name></member>
      <member refid="classbyte__container__with__subtype_1a3b43bde08a4bff8917bcfad01d9e6089" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>byte_container_with_subtype</name></member>
      <member refid="classbyte__container__with__subtype_1ad18f6a7557a2bfce28f1ed8d4d10607c" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>clear_subtype</name></member>
      <member refid="classbyte__container__with__subtype_1a29aa3b98709ae1fcdaf8b55766935c08" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>container_type</name></member>
      <member refid="classbyte__container__with__subtype_1a793fab04ad06741b6909dde032d9ea35" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>has_subtype</name></member>
      <member refid="classbyte__container__with__subtype_1ad134bcb2226d949a4b40b43cfbd6d63f" prot="private" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>m_has_subtype</name></member>
      <member refid="classbyte__container__with__subtype_1a94874c7df81726e0d88c5d4d2a3e3adf" prot="private" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>m_subtype</name></member>
      <member refid="classbyte__container__with__subtype_1a07f26c9ed1e216c1c3a1a286b9c4c197" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>operator!=</name></member>
      <member refid="classbyte__container__with__subtype_1a263d63d0a518cfe9a6b6e508f9a22e85" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>operator==</name></member>
      <member refid="classbyte__container__with__subtype_1aa211ecfe3f0a626e96c54ea7e160491b" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>set_subtype</name></member>
      <member refid="classbyte__container__with__subtype_1a678460360dd494c33fbfde782e7c8201" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>subtype</name></member>
      <member refid="classbyte__container__with__subtype_1a1b423c8cd161e67e1af1c72bbc2c8b90" prot="public" virt="non-virtual"><scope>byte_container_with_subtype</scope><name>subtype_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
