<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structdetail_1_1is__iterator__traits_3_01iterator__traits_3_01T_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>detail::is_iterator_traits&lt; iterator_traits&lt; T &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structdetail_1_1is__iterator__traits_3_01iterator__traits_3_01T_01_4_01_4_1ae33c850bdf55ebc10ee95ff5bcad7d48" prot="private" static="no">
        <type><ref refid="structdetail_1_1iterator__traits" kindref="compound">iterator_traits</ref>&lt; T &gt;</type>
        <definition>using detail::is_iterator_traits&lt; iterator_traits&lt; T &gt; &gt;::traits =  iterator_traits&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>traits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="3713" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="3713" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structdetail_1_1is__iterator__traits_3_01iterator__traits_3_01T_01_4_01_4_1a5d742b42a620bea0ee53dca099a9a91f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::is_iterator_traits&lt; iterator_traits&lt; T &gt; &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <initializer>=
        is_detected&lt;value_type_t, <ref refid="structdetail_1_1iterator__traits" kindref="compound">traits</ref>&gt;::value &amp;&amp;
        is_detected&lt;difference_type_t, <ref refid="structdetail_1_1iterator__traits" kindref="compound">traits</ref>&gt;::value &amp;&amp;
        is_detected&lt;pointer_t, <ref refid="structdetail_1_1iterator__traits" kindref="compound">traits</ref>&gt;::value &amp;&amp;
        is_detected&lt;iterator_category_t, <ref refid="structdetail_1_1iterator__traits" kindref="compound">traits</ref>&gt;::value &amp;&amp;
        is_detected&lt;reference_t, <ref refid="structdetail_1_1iterator__traits" kindref="compound">traits</ref>&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="3716" column="27" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="3716" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="3710" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="3711" bodyend="3722"/>
    <listofallmembers>
      <member refid="structdetail_1_1is__iterator__traits_3_01iterator__traits_3_01T_01_4_01_4_1ae33c850bdf55ebc10ee95ff5bcad7d48" prot="private" virt="non-virtual"><scope>detail::is_iterator_traits&lt; iterator_traits&lt; T &gt; &gt;</scope><name>traits</name></member>
      <member refid="structdetail_1_1is__iterator__traits_3_01iterator__traits_3_01T_01_4_01_4_1a5d742b42a620bea0ee53dca099a9a91f" prot="public" virt="non-virtual"><scope>detail::is_iterator_traits&lt; iterator_traits&lt; T &gt; &gt;</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
