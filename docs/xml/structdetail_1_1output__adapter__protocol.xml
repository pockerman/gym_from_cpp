<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structdetail_1_1output__adapter__protocol" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>detail::output_adapter_protocol</compoundname>
    <derivedcompoundref refid="classdetail_1_1output__stream__adapter" prot="public" virt="non-virtual">detail::output_stream_adapter&lt; CharType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classdetail_1_1output__string__adapter" prot="public" virt="non-virtual">detail::output_string_adapter&lt; CharType, StringType &gt;</derivedcompoundref>
    <derivedcompoundref refid="classdetail_1_1output__vector__adapter" prot="public" virt="non-virtual">detail::output_vector_adapter&lt; CharType, AllocatorType &gt;</derivedcompoundref>
    <includes refid="json_8hpp" local="no">json.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename CharType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdetail_1_1output__adapter__protocol_1a57fbeab6c9e6dac2def4f0a7708b807a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void detail::output_adapter_protocol&lt; CharType &gt;::write_character</definition>
        <argsstring>(CharType c)=0</argsstring>
        <name>write_character</name>
        <reimplementedby refid="classdetail_1_1output__vector__adapter_1ab2f37bf696c716ddb6c0b88b30304da5">write_character</reimplementedby>
        <reimplementedby refid="classdetail_1_1output__stream__adapter_1a4267cde53202637ff7d7b877fb9ac859">write_character</reimplementedby>
        <reimplementedby refid="classdetail_1_1output__string__adapter_1a15ef2742beddbc80d2468755ecf0a21e">write_character</reimplementedby>
        <param>
          <type>CharType</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="14947" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1output__adapter__protocol_1afefb88bb4c134a02e136aaf69d0ecee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void detail::output_adapter_protocol&lt; CharType &gt;::write_characters</definition>
        <argsstring>(const CharType *s, std::size_t length)=0</argsstring>
        <name>write_characters</name>
        <reimplementedby refid="classdetail_1_1output__vector__adapter_1a6744f381ec104be129327caadcede1f7">write_characters</reimplementedby>
        <reimplementedby refid="classdetail_1_1output__stream__adapter_1a19fd5667f311a1dcd86469c25c21d13d">write_characters</reimplementedby>
        <reimplementedby refid="classdetail_1_1output__string__adapter_1aae38554067dbef5006db25256a702416">write_characters</reimplementedby>
        <param>
          <type>const CharType *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="14948" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1output__adapter__protocol_1a4c588cc9ce24c3a46460f33580dc5f11" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual detail::output_adapter_protocol&lt; CharType &gt;::~output_adapter_protocol</definition>
        <argsstring>()=default</argsstring>
        <name>~output_adapter_protocol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="14949" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1output__adapter__protocol_1abc3c05de1a9637889969f59da9ba0a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::output_adapter_protocol&lt; CharType &gt;::output_adapter_protocol</definition>
        <argsstring>()=default</argsstring>
        <name>output_adapter_protocol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="14951" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1output__adapter__protocol_1a03466aec8b97f99d19e27f0f05c66655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::output_adapter_protocol&lt; CharType &gt;::output_adapter_protocol</definition>
        <argsstring>(const output_adapter_protocol &amp;)=default</argsstring>
        <name>output_adapter_protocol</name>
        <param>
          <type>const <ref refid="structdetail_1_1output__adapter__protocol" kindref="compound">output_adapter_protocol</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="14952" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1output__adapter__protocol_1a641001ae666e338cb9753901a8a3ef91" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>detail::output_adapter_protocol&lt; CharType &gt;::output_adapter_protocol</definition>
        <argsstring>(output_adapter_protocol &amp;&amp;) noexcept=default</argsstring>
        <name>output_adapter_protocol</name>
        <param>
          <type><ref refid="structdetail_1_1output__adapter__protocol" kindref="compound">output_adapter_protocol</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="14953" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1output__adapter__protocol_1ae2684c414aaa72a693d0810766e70083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdetail_1_1output__adapter__protocol" kindref="compound">output_adapter_protocol</ref> &amp;</type>
        <definition>output_adapter_protocol&amp; detail::output_adapter_protocol&lt; CharType &gt;::operator=</definition>
        <argsstring>(const output_adapter_protocol &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structdetail_1_1output__adapter__protocol" kindref="compound">output_adapter_protocol</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="14954" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structdetail_1_1output__adapter__protocol_1a0674a6aa1a081351c90b0646a20dc4be" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1output__adapter__protocol" kindref="compound">output_adapter_protocol</ref> &amp;</type>
        <definition>output_adapter_protocol&amp; detail::output_adapter_protocol&lt; CharType &gt;::operator=</definition>
        <argsstring>(output_adapter_protocol &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structdetail_1_1output__adapter__protocol" kindref="compound">output_adapter_protocol</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="14955" column="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>abstract output adapter interface </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>detail::output_stream_adapter&lt; CharType &gt;</label>
        <link refid="classdetail_1_1output__stream__adapter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>detail::output_adapter_protocol&lt; CharType &gt;</label>
        <link refid="structdetail_1_1output__adapter__protocol"/>
      </node>
      <node id="3">
        <label>detail::output_string_adapter&lt; CharType, StringType &gt;</label>
        <link refid="classdetail_1_1output__string__adapter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>detail::output_vector_adapter&lt; CharType, AllocatorType &gt;</label>
        <link refid="classdetail_1_1output__vector__adapter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="14945" column="11" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="14946" bodyend="14956"/>
    <listofallmembers>
      <member refid="structdetail_1_1output__adapter__protocol_1ae2684c414aaa72a693d0810766e70083" prot="public" virt="non-virtual"><scope>detail::output_adapter_protocol</scope><name>operator=</name></member>
      <member refid="structdetail_1_1output__adapter__protocol_1a0674a6aa1a081351c90b0646a20dc4be" prot="public" virt="non-virtual"><scope>detail::output_adapter_protocol</scope><name>operator=</name></member>
      <member refid="structdetail_1_1output__adapter__protocol_1abc3c05de1a9637889969f59da9ba0a03" prot="public" virt="non-virtual"><scope>detail::output_adapter_protocol</scope><name>output_adapter_protocol</name></member>
      <member refid="structdetail_1_1output__adapter__protocol_1a03466aec8b97f99d19e27f0f05c66655" prot="public" virt="non-virtual"><scope>detail::output_adapter_protocol</scope><name>output_adapter_protocol</name></member>
      <member refid="structdetail_1_1output__adapter__protocol_1a641001ae666e338cb9753901a8a3ef91" prot="public" virt="non-virtual"><scope>detail::output_adapter_protocol</scope><name>output_adapter_protocol</name></member>
      <member refid="structdetail_1_1output__adapter__protocol_1a57fbeab6c9e6dac2def4f0a7708b807a" prot="public" virt="pure-virtual"><scope>detail::output_adapter_protocol</scope><name>write_character</name></member>
      <member refid="structdetail_1_1output__adapter__protocol_1afefb88bb4c134a02e136aaf69d0ecee9" prot="public" virt="pure-virtual"><scope>detail::output_adapter_protocol</scope><name>write_characters</name></member>
      <member refid="structdetail_1_1output__adapter__protocol_1a4c588cc9ce24c3a46460f33580dc5f11" prot="public" virt="virtual"><scope>detail::output_adapter_protocol</scope><name>~output_adapter_protocol</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
