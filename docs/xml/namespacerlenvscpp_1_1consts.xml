<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacerlenvscpp_1_1consts" kind="namespace" language="C++">
    <compoundname>rlenvscpp::consts</compoundname>
    <innernamespace refid="namespacerlenvscpp_1_1consts_1_1maths">rlenvscpp::consts::maths</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="rlenvs__consts_8h_1a3153d49820824d1ee2fafd166e9b042b" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>const uint_t rlenvscpp::consts::INVALID_ID</definition>
        <argsstring></argsstring>
        <name>INVALID_ID</name>
        <initializer>= static_cast&lt;<ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref>&gt;(-1)</initializer>
        <briefdescription>
<para>INVALID_ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_consts.h" line="13" column="21" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_consts.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rlenvs__consts_8h_1a9a7126a372c02dde25cfc0b911b1eb0c" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string rlenvscpp::consts::INVALID_STR</definition>
        <argsstring></argsstring>
        <name>INVALID_STR</name>
        <initializer>= std::string(&quot;INVALID&quot;)</initializer>
        <briefdescription>
<para>Invalid string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_consts.h" line="18" column="26" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_consts.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rlenvs__consts_8h_1a7dc854df7e93c52a325e23147142ffd4" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>const real_t rlenvscpp::consts::TOLERANCE</definition>
        <argsstring></argsstring>
        <name>TOLERANCE</name>
        <initializer>= 1.0e-8</initializer>
        <briefdescription>
<para>Tolerance to use around the library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_consts.h" line="23" column="21" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_consts.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/rlenvs_consts.h" line="8" column="1"/>
  </compounddef>
</doxygen>
