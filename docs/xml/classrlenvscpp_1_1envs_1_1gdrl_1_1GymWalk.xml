<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk" kind="class" language="C++" prot="public" final="yes">
    <compoundname>rlenvscpp::envs::gdrl::GymWalk</compoundname>
    <basecompoundref refid="classrlenvscpp_1_1envs_1_1EnvBase" prot="public" virt="non-virtual">rlenvscpp::envs::EnvBase&lt; TimeStep&lt; uint_t &gt;, ScalarDiscreteEnv&lt; state_size, 2, 0, 0 &gt; &gt;</basecompoundref>
    <includes refid="gym__walk_8h" local="no">gym_walk.h</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <declname>state_size</declname>
        <defname>state_size</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a0160046961bf00a4096fe209a57c2673" prot="public" static="no">
        <type><ref refid="classrlenvscpp_1_1envs_1_1EnvBase" kindref="compound">EnvBase</ref>&lt; <ref refid="classrlenvscpp_1_1TimeStep" kindref="compound">TimeStep</ref>&lt; <ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref> &gt;, <ref refid="structrlenvscpp_1_1envs_1_1ScalarDiscreteEnv" kindref="compound">ScalarDiscreteEnv</ref>&lt; state_size, 2, 0, 0 &gt; &gt;</type>
        <definition>typedef EnvBase&lt;TimeStep&lt;uint_t&gt;, ScalarDiscreteEnv&lt;state_size, 2, 0, 0&gt; &gt; rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::base_type</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="58" column="2" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a30858d85354349bd8c1f3f14ef139cdc" prot="public" static="no">
        <type><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a9d7b5e362a2acd20f6a2e4eb85359a28" kindref="member">base_type::time_step_type</ref></type>
        <definition>typedef base_type::time_step_type rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::time_step_type</definition>
        <argsstring></argsstring>
        <name>time_step_type</name>
        <briefdescription>
<para>The time step type we return every time a step in the environment is performed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="64" column="48" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a97d1b94508f8fc10b9d54ced90adc16c" prot="public" static="no">
        <type><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a32b57a9f7a72fdac0033d15159fcdfa8" kindref="member">base_type::state_space_type</ref></type>
        <definition>typedef base_type::state_space_type rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::state_space_type</definition>
        <argsstring></argsstring>
        <name>state_space_type</name>
        <briefdescription>
<para>The type describing the state space for the environment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="69" column="46" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1af064852fcfb741b1880e282b181fabe9" prot="public" static="no">
        <type><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a1bc17d6a838f0eb39347c104f0c25e88" kindref="member">base_type::action_space_type</ref></type>
        <definition>typedef base_type::action_space_type rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::action_space_type</definition>
        <argsstring></argsstring>
        <name>action_space_type</name>
        <briefdescription>
<para>The type of the action space for the environment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="74" column="47" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1af0b68c4febc4f2f464ad476e635684fc" prot="public" static="no">
        <type><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a45feccee92313b3a3d636cb288488242" kindref="member">base_type::action_type</ref></type>
        <definition>typedef base_type::action_type rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::action_type</definition>
        <argsstring></argsstring>
        <name>action_type</name>
        <briefdescription>
<para>The type of the action to be undertaken in the environment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="79" column="45" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1aa198bf03647c5aa2dd604be1b2c332ca" prot="public" static="no">
        <type><ref refid="classrlenvscpp_1_1envs_1_1EnvBase_1a75f678ad7dc1367058734619e78de120" kindref="member">base_type::state_type</ref></type>
        <definition>typedef base_type::state_type rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::state_type</definition>
        <argsstring></argsstring>
        <name>state_type</name>
        <briefdescription>
<para>The type of the state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="84" column="40" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a7cf97835c27a643151125c376cb2cd7a" prot="public" static="no">
        <type>std::vector&lt; std::tuple&lt; <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref>, <ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref>, <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref>, bool &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::tuple&lt;real_t, uint_t, real_t, bool&gt; &gt; rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::dynamics_t</definition>
        <argsstring></argsstring>
        <name>dynamics_t</name>
        <briefdescription>
<para>dynamics_t </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="89" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a3a8d34d2ae95749b85e8d22867aa6b0e" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <initializer>= &quot;GymWalk&quot;</initializer>
        <briefdescription>
<para>name </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="49" column="31" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a021ab12bd20805e595c3e3714b3f33e1" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::URI</definition>
        <argsstring></argsstring>
        <name>URI</name>
        <initializer>=  &quot;/gdrl/gym-walk-env&quot;</initializer>
        <briefdescription>
<para>The URI for accessing the environment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="54" column="26" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a99db16b9de1e90da3134943b5659c0c9" prot="private" static="no" mutable="no">
        <type><ref refid="classrlenvscpp_1_1envs_1_1RESTApiServerWrapper" kindref="compound">RESTApiServerWrapper</ref></type>
        <definition>RESTApiServerWrapper rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::api_server_</definition>
        <argsstring></argsstring>
        <name>api_server_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="170" column="22" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1acee77ab2d9a21d4917bcb8de802ac48f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::GymWalk</definition>
        <argsstring>(const RESTApiServerWrapper &amp;api_server)</argsstring>
        <name>GymWalk</name>
        <param>
          <type>const <ref refid="classrlenvscpp_1_1envs_1_1RESTApiServerWrapper" kindref="compound">RESTApiServerWrapper</ref> &amp;</type>
          <declname>api_server</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="94" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="179" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1ae8ba108935b7dc552876cdaf39f6a864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::GymWalk</definition>
        <argsstring>(const RESTApiServerWrapper &amp;api_server, const uint_t cidx)</argsstring>
        <name>GymWalk</name>
        <param>
          <type>const <ref refid="classrlenvscpp_1_1envs_1_1RESTApiServerWrapper" kindref="compound">RESTApiServerWrapper</ref> &amp;</type>
          <declname>api_server</declname>
        </param>
        <param>
          <type>const <ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
          <declname>cidx</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="99" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="190" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1ab9b1682c623cd6d268c175bb8d2eb948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::GymWalk</definition>
        <argsstring>(const GymWalk &amp;other)</argsstring>
        <name>GymWalk</name>
        <param>
          <type>const <ref refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk" kindref="compound">GymWalk</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>copy ctor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="105" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="203" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1ac94ce6e4888f8a07da0759bf511b5052" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::make</definition>
        <argsstring>(const std::string &amp;version, const std::unordered_map&lt; std::string, std::any &gt; &amp;options) override final</argsstring>
        <name>make</name>
        <reimplements refid="classrlenvscpp_1_1envs_1_1EnvBase_1aaea68c03f14ca20de8b1617eaadfa422">make</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>version</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; std::string, std::any &gt; &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>make. Builds the environment. Optionally we can choose if the environment will be slippery </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="111" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="234" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a01c400d2faa790a15a3aec959e077fbb" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::is_alive</definition>
        <argsstring>() const override final</argsstring>
        <name>is_alive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="118" column="14" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="272" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1afd9c3ee1b8fc09fad28164cb6b8de0ce" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>bool rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::close</definition>
        <argsstring>() override final</argsstring>
        <name>close</name>
        <reimplements refid="classrlenvscpp_1_1envs_1_1EnvBase_1a53051d4a4dfb0adbb14b0d256f6c25d1">close</reimplements>
        <briefdescription>
<para>close the environment </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="123" column="18" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="280" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1ab8c77ac759752bdca809c60eb423d3f3" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a30858d85354349bd8c1f3f14ef139cdc" kindref="member">time_step_type</ref></type>
        <definition>GymWalk&lt; state_size &gt;::time_step_type rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::step</definition>
        <argsstring>(const action_type &amp;action) override final</argsstring>
        <name>step</name>
        <reimplements refid="classrlenvscpp_1_1envs_1_1EnvBase_1a685d86116135ed7cb368c329add2147e">step</reimplements>
        <param>
          <type>const <ref refid="structrlenvscpp_1_1envs_1_1ScalarDiscreteEnv_1aa18d718ab41eec941ae04c118ef6c2e6" kindref="member">action_type</ref> &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>step </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="130" column="28" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="252" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1adf9f019e69b8ef96f567c0452006d34b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a30858d85354349bd8c1f3f14ef139cdc" kindref="member">time_step_type</ref></type>
        <definition>GymWalk&lt; state_size &gt;::time_step_type rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::reset</definition>
        <argsstring>(uint_t seed, const std::unordered_map&lt; std::string, std::any &gt; &amp;options) override final</argsstring>
        <name>reset</name>
        <reimplements refid="classrlenvscpp_1_1envs_1_1EnvBase_1ad9caf8e016d511f258ecda9268d9e9c3">reset</reimplements>
        <param>
          <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
          <declname>seed</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; std::string, std::any &gt; &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Reset the environment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="135" column="28" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="292" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a04a4843dfd6cf6266879dddbce59ee76" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="classrlenvscpp_1_1envs_1_1EnvBase" kindref="compound">base_type</ref> &gt;</type>
        <definition>GymWalk&lt; state_size &gt; rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::make_copy</definition>
        <argsstring>(uint_t cidx) const override final</argsstring>
        <name>make_copy</name>
        <param>
          <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
          <declname>cidx</declname>
        </param>
        <briefdescription>
<para>Create a new copy of the environment with the given copy index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="143" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="312" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a1641db926d24e2af5fc9eefe29fe1ff8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::n_states</definition>
        <argsstring>() const noexcept</argsstring>
        <name>n_states</name>
        <briefdescription>
<para>n_states. Returns the number of states </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="149" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1aee2384159f6ff5bc82d952006b1dd1d5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>uint_t rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::n_actions</definition>
        <argsstring>() const noexcept</argsstring>
        <name>n_actions</name>
        <briefdescription>
<para>n_actions. Returns the number of actions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="154" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="154" bodyend="154"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a040a99aa01f487dbf8b1935b7d97f92d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a7cf97835c27a643151125c376cb2cd7a" kindref="member">dynamics_t</ref></type>
        <definition>GymWalk&lt; state_size &gt;::dynamics_t rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::build_dynamics_from_response_</definition>
        <argsstring>(const nlohmann::json &amp;response) const</argsstring>
        <name>build_dynamics_from_response_</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>build the dynamics from response </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="162" column="16" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a3b1d81f6c0d180b3744f9424171bd796" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a30858d85354349bd8c1f3f14ef139cdc" kindref="member">time_step_type</ref></type>
        <definition>GymWalk&lt; state_size &gt;::time_step_type rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;::create_time_step_from_response_</definition>
        <argsstring>(const nlohmann::json &amp;response) const</argsstring>
        <name>create_time_step_from_response_</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>Handle the reset response from the environment server. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="167" column="20" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="220" bodyend="230"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>class <ref refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk" kindref="compound">GymWalk</ref>. Interface for the <ref refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk" kindref="compound">GymWalk</ref> environment </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>rlenvscpp::envs::synchronized_env_mixin</label>
        <link refid="structrlenvscpp_1_1envs_1_1synchronized__env__mixin"/>
      </node>
      <node id="3">
        <label>rlenvscpp::envs::ScalarDiscreteEnv&lt; state_end, action_end, state_start, action_start &gt;</label>
        <link refid="structrlenvscpp_1_1envs_1_1ScalarDiscreteEnv"/>
      </node>
      <node id="2">
        <label>rlenvscpp::envs::EnvBase&lt; TimeStep&lt; uint_t &gt;, ScalarDiscreteEnv&lt; state_size, 2, 0, 0 &gt; &gt;</label>
        <link refid="classrlenvscpp_1_1envs_1_1EnvBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;</label>
        <link refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>rlenvscpp::envs::synchronized_env_mixin</label>
        <link refid="structrlenvscpp_1_1envs_1_1synchronized__env__mixin"/>
      </node>
      <node id="3">
        <label>rlenvscpp::envs::ScalarDiscreteEnv&lt; state_end, action_end, state_start, action_start &gt;</label>
        <link refid="structrlenvscpp_1_1envs_1_1ScalarDiscreteEnv"/>
      </node>
      <node id="2">
        <label>rlenvscpp::envs::EnvBase&lt; TimeStep&lt; uint_t &gt;, ScalarDiscreteEnv&lt; state_size, 2, 0, 0 &gt; &gt;</label>
        <link refid="classrlenvscpp_1_1envs_1_1EnvBase"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rlenvscpp::envs::gdrl::GymWalk&lt; state_size &gt;</label>
        <link refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" line="40" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/envs/gdrl/gym_walk.h" bodystart="43" bodyend="171"/>
    <listofallmembers>
      <member refid="structrlenvscpp_1_1envs_1_1ScalarDiscreteEnv_1ab5840e87f292711abe7c3d5884ef1e67" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>action_space</name></member>
      <member refid="structrlenvscpp_1_1envs_1_1ScalarDiscreteEnv_1a7661b0234c32fae7010adddd42033497" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>ACTION_SPACE_SIZE</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1af064852fcfb741b1880e282b181fabe9" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>action_space_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1af0b68c4febc4f2f464ad476e635684fc" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>action_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a99db16b9de1e90da3134943b5659c0c9" prot="private" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>api_server_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a0160046961bf00a4096fe209a57c2673" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>base_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a040a99aa01f487dbf8b1935b7d97f92d" prot="private" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>build_dynamics_from_response_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a1897dd501bc1980e1cde04b60c012ca8" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>cidx</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1afd9c3ee1b8fc09fad28164cb6b8de0ce" prot="public" virt="virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>close</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a3b1d81f6c0d180b3744f9424171bd796" prot="private" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>create_time_step_from_response_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a568ded9bca962f3ea71727c28f0e3d9f" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>DEFAULT_ENV_SEED</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a7cf97835c27a643151125c376cb2cd7a" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>dynamics_t</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a4c3153c80c82e905471cfe9598f92508" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>env_name</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a4cb0d72b75df62411b8b7c8820c3a918" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>EnvBase</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1aa7eb0ff71af94db1f48c1b39ebcc29c3" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>EnvBase</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1ab249d79efbef8ac3e1c517736f7fe66a" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>get_current_time_step_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a85b7be84d926406055a60d949a3fe613" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>get_current_time_step_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1acee77ab2d9a21d4917bcb8de802ac48f" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>GymWalk</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1ae8ba108935b7dc552876cdaf39f6a864" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>GymWalk</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1ab9b1682c623cd6d268c175bb8d2eb948" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>GymWalk</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1ad6b7d4737dfa8d6b73554d757e6f01b0" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>invalidate_is_created_flag_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a01c400d2faa790a15a3aec959e077fbb" prot="public" virt="virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>is_alive</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1afb93f499d7eeb57a6f31fef89fa6b645" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>is_created</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1ac94ce6e4888f8a07da0759bf511b5052" prot="public" virt="virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>make</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a04a4843dfd6cf6266879dddbce59ee76" prot="public" virt="virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>make_copy</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1ac7ba403c4c5046865d373a366ff3fd58" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>make_created_</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1aee2384159f6ff5bc82d952006b1dd1d5" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>n_actions</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a1641db926d24e2af5fc9eefe29fe1ff8" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>n_states</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a3a8d34d2ae95749b85e8d22867aa6b0e" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>name</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1adf9f019e69b8ef96f567c0452006d34b" prot="public" virt="virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>reset</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a0dc609f93cc8dffa2b9ecf65c051ae66" prot="public" virt="non-virtual" ambiguityscope="EnvBase&lt; TimeStep&lt; uint_t &gt;, ScalarDiscreteEnv&lt; state_size, 2, 0, 0 &gt; &gt;::"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>reset</name></member>
      <member refid="structrlenvscpp_1_1envs_1_1ScalarDiscreteEnv_1afc64c18cffe62ebeb974f18f59aa06cb" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>sample_action</name></member>
      <member refid="structrlenvscpp_1_1envs_1_1ScalarDiscreteEnv_1a5efbb112aa9e29fcb6bc79cd0a039760" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>sample_action</name></member>
      <member refid="structrlenvscpp_1_1envs_1_1ScalarDiscreteEnv_1aaf70a12a037e6c4037329fb105b38cdb" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>sample_action</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a3aad75c2321c714eb15d11ddab75ba86" prot="protected" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>set_version_</name></member>
      <member refid="structrlenvscpp_1_1envs_1_1ScalarDiscreteEnv_1a8805b2a82d2b83ff9807da813cd51788" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>state_space</name></member>
      <member refid="structrlenvscpp_1_1envs_1_1ScalarDiscreteEnv_1a743c951c81ec71003403ba09e98827c2" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>STATE_SPACE_SIZE</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a97d1b94508f8fc10b9d54ced90adc16c" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>state_space_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1aa198bf03647c5aa2dd604be1b2c332ca" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>state_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1ab8c77ac759752bdca809c60eb423d3f3" prot="public" virt="virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>step</name></member>
      <member refid="structrlenvscpp_1_1envs_1_1synchronized__env__mixin_1a088ce5412a694ee0844498cf091efcf2" prot="public" virt="virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>sync</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a30858d85354349bd8c1f3f14ef139cdc" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>time_step_type</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1gdrl_1_1GymWalk_1a021ab12bd20805e595c3e3714b3f33e1" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>URI</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1aa7ef6b01e649a3bed482e92efc4eee4f" prot="public" virt="non-virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>version</name></member>
      <member refid="classrlenvscpp_1_1envs_1_1EnvBase_1a918429c30af06db020d87543478ec6df" prot="public" virt="virtual"><scope>rlenvscpp::envs::gdrl::GymWalk</scope><name>~EnvBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
