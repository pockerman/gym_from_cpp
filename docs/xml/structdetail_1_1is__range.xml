<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structdetail_1_1is__range" kind="struct" language="C++" prot="public">
    <compoundname>detail::is_range</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structdetail_1_1is__range_1aa9f09e007856cae9058250ae2678d685" prot="private" static="no">
        <type>typename std::add_lvalue_reference&lt; T &gt;::type</type>
        <definition>using detail::is_range&lt; T &gt;::t_ref =  typename std::add_lvalue_reference&lt;T&gt;::type</definition>
        <argsstring></argsstring>
        <name>t_ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="3728" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="3728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structdetail_1_1is__range_1a40f25e407f601af71b29ade4e32a2fd8" prot="private" static="no">
        <type>detected_t&lt; result_of_begin, t_ref &gt;</type>
        <definition>using detail::is_range&lt; T &gt;::iterator =  detected_t&lt;result_of_begin, t_ref&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="3730" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="3730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structdetail_1_1is__range_1a3c35010cd499456c7da66bf8c78ccb5b" prot="private" static="no">
        <type>detected_t&lt; result_of_end, t_ref &gt;</type>
        <definition>using detail::is_range&lt; T &gt;::sentinel =  detected_t&lt;result_of_end, t_ref&gt;</definition>
        <argsstring></argsstring>
        <name>sentinel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="3731" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="3731" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="structdetail_1_1is__range_1ade99f453e61d56394476506e1c563e2e" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto detail::is_range&lt; T &gt;::is_iterator_begin</definition>
        <argsstring></argsstring>
        <name>is_iterator_begin</name>
        <initializer>=
        <ref refid="structdetail_1_1is__iterator__traits" kindref="compound">is_iterator_traits</ref>&lt;<ref refid="structdetail_1_1iterator__traits" kindref="compound">iterator_traits</ref>&lt;iterator&gt;&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="3736" column="27" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="3736" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structdetail_1_1is__range_1ace5df29dc07df4c868b41ff7eb6b8d74" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool detail::is_range&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <initializer>= !std::is_same&lt;iterator, <ref refid="structdetail_1_1nonesuch" kindref="compound">nonesuch</ref>&gt;::value &amp;&amp; !std::is_same&lt;sentinel, <ref refid="structdetail_1_1nonesuch" kindref="compound">nonesuch</ref>&gt;::value &amp;&amp; is_iterator_begin</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="3740" column="27" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="3740" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="3725" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="3726" bodyend="3741"/>
    <listofallmembers>
      <member refid="structdetail_1_1is__range_1ade99f453e61d56394476506e1c563e2e" prot="private" virt="non-virtual"><scope>detail::is_range</scope><name>is_iterator_begin</name></member>
      <member refid="structdetail_1_1is__range_1a40f25e407f601af71b29ade4e32a2fd8" prot="private" virt="non-virtual"><scope>detail::is_range</scope><name>iterator</name></member>
      <member refid="structdetail_1_1is__range_1a3c35010cd499456c7da66bf8c78ccb5b" prot="private" virt="non-virtual"><scope>detail::is_range</scope><name>sentinel</name></member>
      <member refid="structdetail_1_1is__range_1aa9f09e007856cae9058250ae2678d685" prot="private" virt="non-virtual"><scope>detail::is_range</scope><name>t_ref</name></member>
      <member refid="structdetail_1_1is__range_1ace5df29dc07df4c868b41ff7eb6b8d74" prot="public" virt="non-virtual"><scope>detail::is_range</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
