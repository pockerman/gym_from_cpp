<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structbetter__enums_1_1map" kind="struct" language="C++" prot="public">
    <compoundname>better_enums::map</compoundname>
    <templateparamlist>
      <param>
        <type>typename Enum</type>
      </param>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Compare</type>
        <defval><ref refid="structbetter__enums_1_1map__compare" kindref="compound">map_compare</ref>&lt;T&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structbetter__enums_1_1map_1a225f81223779091e6761c74c766d7db1" prot="public" static="no">
        <type>T(*</type>
        <definition>typedef T(* better_enums::map&lt; Enum, T, Compare &gt;::function) (Enum)</definition>
        <argsstring>)(Enum)</argsstring>
        <name>function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="1278" column="13" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="1278" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structbetter__enums_1_1map_1ada14af0926a59af12aa13609ad0bd16f" prot="private" static="no" mutable="no">
        <type>const function</type>
        <definition>const function better_enums::map&lt; Enum, T, Compare &gt;::_f</definition>
        <argsstring></argsstring>
        <name>_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="1304" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="1304" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structbetter__enums_1_1map_1a5010e83ee9aa33e273832f344a7ffe10" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>BETTER_ENUMS_CONSTEXPR_</type>
        <definition>BETTER_ENUMS_CONSTEXPR_ better_enums::map&lt; Enum, T, Compare &gt;::map</definition>
        <argsstring>(function f)</argsstring>
        <name>map</name>
        <param>
          <type>function</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="1280" column="38" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="1280" bodyend="1280"/>
      </memberdef>
      <memberdef kind="function" id="structbetter__enums_1_1map_1afd371738df1b327d042a1bfe6938d92d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>BETTER_ENUMS_CONSTEXPR_ T</type>
        <definition>BETTER_ENUMS_CONSTEXPR_ T better_enums::map&lt; Enum, T, Compare &gt;::from_enum</definition>
        <argsstring>(Enum value) const</argsstring>
        <name>from_enum</name>
        <param>
          <type>Enum</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="1282" column="31" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="1282" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="structbetter__enums_1_1map_1a0369a139acd93f5991103a2d5f3eacf9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>BETTER_ENUMS_CONSTEXPR_ T</type>
        <definition>BETTER_ENUMS_CONSTEXPR_ T better_enums::map&lt; Enum, T, Compare &gt;::operator[]</definition>
        <argsstring>(Enum value) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>Enum</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="1283" column="31" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="1283" bodyend="1284"/>
      </memberdef>
      <memberdef kind="function" id="structbetter__enums_1_1map_1a18ad2328a67af6d866e2fbc16b890ece" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>BETTER_ENUMS_CONSTEXPR_ Enum</type>
        <definition>BETTER_ENUMS_CONSTEXPR_ Enum better_enums::map&lt; Enum, T, Compare &gt;::to_enum</definition>
        <argsstring>(T value) const</argsstring>
        <name>to_enum</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="1286" column="34" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="1286" bodyend="1290"/>
      </memberdef>
      <memberdef kind="function" id="structbetter__enums_1_1map_1a4191ed97b5cbb98022e5dd8b6f6d5b45" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>BETTER_ENUMS_CONSTEXPR_ <ref refid="structbetter__enums_1_1optional" kindref="compound">optional</ref>&lt; Enum &gt;</type>
        <definition>BETTER_ENUMS_CONSTEXPR_ optional&lt;Enum&gt; better_enums::map&lt; Enum, T, Compare &gt;::to_enum_nothrow</definition>
        <argsstring>(T value, size_t index=0) const</argsstring>
        <name>to_enum_nothrow</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="1293" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="1293" bodyend="1301"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" line="1277" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/enum.h" bodystart="1277" bodyend="1305"/>
    <listofallmembers>
      <member refid="structbetter__enums_1_1map_1ada14af0926a59af12aa13609ad0bd16f" prot="private" virt="non-virtual"><scope>better_enums::map</scope><name>_f</name></member>
      <member refid="structbetter__enums_1_1map_1afd371738df1b327d042a1bfe6938d92d" prot="public" virt="non-virtual"><scope>better_enums::map</scope><name>from_enum</name></member>
      <member refid="structbetter__enums_1_1map_1a225f81223779091e6761c74c766d7db1" prot="public" virt="non-virtual"><scope>better_enums::map</scope><name>function</name></member>
      <member refid="structbetter__enums_1_1map_1a5010e83ee9aa33e273832f344a7ffe10" prot="public" virt="non-virtual"><scope>better_enums::map</scope><name>map</name></member>
      <member refid="structbetter__enums_1_1map_1a0369a139acd93f5991103a2d5f3eacf9" prot="public" virt="non-virtual"><scope>better_enums::map</scope><name>operator[]</name></member>
      <member refid="structbetter__enums_1_1map_1a18ad2328a67af6d866e2fbc16b890ece" prot="public" virt="non-virtual"><scope>better_enums::map</scope><name>to_enum</name></member>
      <member refid="structbetter__enums_1_1map_1a4191ed97b5cbb98022e5dd8b6f6d5b45" prot="public" virt="non-virtual"><scope>better_enums::map</scope><name>to_enum_nothrow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
