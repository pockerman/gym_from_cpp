<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structjson__sax" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>json_sax</compoundname>
    <includes refid="json_8hpp" local="no">json.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename BasicJsonType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structjson__sax_1a5fd59c56514447ab1a7c5e7f0ab24601" prot="public" static="no">
        <type>typename BasicJsonType::number_integer_t</type>
        <definition>using json_sax&lt; BasicJsonType &gt;::number_integer_t =  typename BasicJsonType::number_integer_t</definition>
        <argsstring></argsstring>
        <name>number_integer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6672" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="6672" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structjson__sax_1acbd02515ccdc3bfe940688fc96ac1359" prot="public" static="no">
        <type>typename BasicJsonType::number_unsigned_t</type>
        <definition>using json_sax&lt; BasicJsonType &gt;::number_unsigned_t =  typename BasicJsonType::number_unsigned_t</definition>
        <argsstring></argsstring>
        <name>number_unsigned_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6673" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="6673" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structjson__sax_1acb0bfbb3b0c6e9dc02cd6aab12c85654" prot="public" static="no">
        <type>typename BasicJsonType::number_float_t</type>
        <definition>using json_sax&lt; BasicJsonType &gt;::number_float_t =  typename BasicJsonType::number_float_t</definition>
        <argsstring></argsstring>
        <name>number_float_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6674" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="6674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structjson__sax_1a62085d156a899aaf2913ac25ded93996" prot="public" static="no">
        <type>typename BasicJsonType::string_t</type>
        <definition>using json_sax&lt; BasicJsonType &gt;::string_t =  typename BasicJsonType::string_t</definition>
        <argsstring></argsstring>
        <name>string_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6675" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="6675" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structjson__sax_1aeb5a583cc482d34e764d038a9c682e02" prot="public" static="no">
        <type>typename BasicJsonType::binary_t</type>
        <definition>using json_sax&lt; BasicJsonType &gt;::binary_t =  typename BasicJsonType::binary_t</definition>
        <argsstring></argsstring>
        <name>binary_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6676" column="5" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="6676" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structjson__sax_1acbcc09c0ada2782cd73cc4135823181d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::null</definition>
        <argsstring>()=0</argsstring>
        <name>null</name>
        <briefdescription>
<para>a null value was read </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether parsing should proceed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6682" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1ab89f75382c0fd7fe81c95fc84cfa3150" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::boolean</definition>
        <argsstring>(bool val)=0</argsstring>
        <name>boolean</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>a boolean value was read </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>boolean value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether parsing should proceed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6689" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1a46cc306b7677553d8f6bd8c9592eb1bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::number_integer</definition>
        <argsstring>(number_integer_t val)=0</argsstring>
        <name>number_integer</name>
        <param>
          <type>number_integer_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>an integer number was read </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>integer value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether parsing should proceed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6696" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1a32f8a32794cb384f0de3d3a96a6bb696" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::number_unsigned</definition>
        <argsstring>(number_unsigned_t val)=0</argsstring>
        <name>number_unsigned</name>
        <param>
          <type>number_unsigned_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>an unsigned integer number was read </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>unsigned integer value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether parsing should proceed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6703" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1a19eafa3a92fc75e0258a842283396aa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::number_float</definition>
        <argsstring>(number_float_t val, const string_t &amp;s)=0</argsstring>
        <name>number_float</name>
        <param>
          <type>number_float_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const string_t &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>a floating-point number was read </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>floating-point value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>raw token value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether parsing should proceed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6711" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1a3da9ee0c61f1a37e6c6a3d2dccb16765" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::string</definition>
        <argsstring>(string_t &amp;val)=0</argsstring>
        <name>string</name>
        <param>
          <type>string_t &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>a string value was read </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>string value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether parsing should proceed </para>
</simplesect>
<simplesect kind="note"><para>It is safe to move the passed string value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6719" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1a15d6c5d0dcaceb906405f427faf9b34e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::binary</definition>
        <argsstring>(binary_t &amp;val)=0</argsstring>
        <name>binary</name>
        <param>
          <type>binary_t &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>a binary value was read </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>binary value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether parsing should proceed </para>
</simplesect>
<simplesect kind="note"><para>It is safe to move the passed binary value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6727" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1a54a0883df64f40664395e3dad674aaa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::start_object</definition>
        <argsstring>(std::size_t elements)=0</argsstring>
        <name>start_object</name>
        <param>
          <type>std::size_t</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
<para>the beginning of an object was read </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elements</parametername>
</parameternamelist>
<parameterdescription>
<para>number of object elements or -1 if unknown </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether parsing should proceed </para>
</simplesect>
<simplesect kind="note"><para>binary formats may report the number of elements </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6735" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1a3355ecd7e3e9806dcb80b2f8842b82ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::key</definition>
        <argsstring>(string_t &amp;val)=0</argsstring>
        <name>key</name>
        <param>
          <type>string_t &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>an object key was read </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>object key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether parsing should proceed </para>
</simplesect>
<simplesect kind="note"><para>It is safe to move the passed string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6743" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1ac34854cab5e023c5d0e8b381a11aba5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::end_object</definition>
        <argsstring>()=0</argsstring>
        <name>end_object</name>
        <briefdescription>
<para>the end of an object was read </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether parsing should proceed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6749" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1afc4d5c0d123f2e3c939060a778c4f22c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::start_array</definition>
        <argsstring>(std::size_t elements)=0</argsstring>
        <name>start_array</name>
        <param>
          <type>std::size_t</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
<para>the beginning of an array was read </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">elements</parametername>
</parameternamelist>
<parameterdescription>
<para>number of array elements or -1 if unknown </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether parsing should proceed </para>
</simplesect>
<simplesect kind="note"><para>binary formats may report the number of elements </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6757" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1a81fbddbf7dc96eab21ef916625ad5f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::end_array</definition>
        <argsstring>()=0</argsstring>
        <name>end_array</name>
        <briefdescription>
<para>the end of an array was read </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>whether parsing should proceed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6763" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1af165920966b60b78e57a2e4d92a63897" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool json_sax&lt; BasicJsonType &gt;::parse_error</definition>
        <argsstring>(std::size_t position, const std::string &amp;last_token, const detail::exception &amp;ex)=0</argsstring>
        <name>parse_error</name>
        <param>
          <type>std::size_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>last_token</declname>
        </param>
        <param>
          <type>const <ref refid="classdetail_1_1exception" kindref="compound">detail::exception</ref> &amp;</type>
          <declname>ex</declname>
        </param>
        <briefdescription>
<para>a parse error occurred </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>the position in the input where the error occurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">last_token</parametername>
</parameternamelist>
<parameterdescription>
<para>the last read token </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ex</parametername>
</parameternamelist>
<parameterdescription>
<para>an exception object describing the error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether parsing should proceed (must return false) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6772" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1a3603caf3847143337b9974d4b1c94f11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>json_sax&lt; BasicJsonType &gt;::json_sax</definition>
        <argsstring>()=default</argsstring>
        <name>json_sax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6776" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1a978a4d26990f64d60686ef22568e76eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>json_sax&lt; BasicJsonType &gt;::json_sax</definition>
        <argsstring>(const json_sax &amp;)=default</argsstring>
        <name>json_sax</name>
        <param>
          <type>const <ref refid="structjson__sax" kindref="compound">json_sax</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6777" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1adb6b743b889faf0c050f80bfae890450" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>json_sax&lt; BasicJsonType &gt;::json_sax</definition>
        <argsstring>(json_sax &amp;&amp;) noexcept=default</argsstring>
        <name>json_sax</name>
        <param>
          <type><ref refid="structjson__sax" kindref="compound">json_sax</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6778" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1a09ee025eef62b4297faf70ab964d557e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjson__sax" kindref="compound">json_sax</ref> &amp;</type>
        <definition>json_sax&amp; json_sax&lt; BasicJsonType &gt;::operator=</definition>
        <argsstring>(const json_sax &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structjson__sax" kindref="compound">json_sax</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6779" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1acd554bf068d498dccf90854f24888b8e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="structjson__sax" kindref="compound">json_sax</ref> &amp;</type>
        <definition>json_sax&amp; json_sax&lt; BasicJsonType &gt;::operator=</definition>
        <argsstring>(json_sax &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structjson__sax" kindref="compound">json_sax</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6780" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structjson__sax_1aa6c51db3f302401a85a89b750b654ad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual json_sax&lt; BasicJsonType &gt;::~json_sax</definition>
        <argsstring>()=default</argsstring>
        <name>~json_sax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6781" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>SAX interface. </para>
    </briefdescription>
    <detaileddescription>
<para>This class describes the SAX interface used by nlohmann::json::sax_parse. Each function is called in different situations while the input is parsed. The boolean return value informs the parser whether to continue processing the input. </para>
    </detaileddescription>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" line="6670" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/extern/nlohmann/json/json.hpp" bodystart="6671" bodyend="6782"/>
    <listofallmembers>
      <member refid="structjson__sax_1a15d6c5d0dcaceb906405f427faf9b34e" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>binary</name></member>
      <member refid="structjson__sax_1aeb5a583cc482d34e764d038a9c682e02" prot="public" virt="non-virtual"><scope>json_sax</scope><name>binary_t</name></member>
      <member refid="structjson__sax_1ab89f75382c0fd7fe81c95fc84cfa3150" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>boolean</name></member>
      <member refid="structjson__sax_1a81fbddbf7dc96eab21ef916625ad5f3b" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>end_array</name></member>
      <member refid="structjson__sax_1ac34854cab5e023c5d0e8b381a11aba5b" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>end_object</name></member>
      <member refid="structjson__sax_1a3603caf3847143337b9974d4b1c94f11" prot="public" virt="non-virtual"><scope>json_sax</scope><name>json_sax</name></member>
      <member refid="structjson__sax_1a978a4d26990f64d60686ef22568e76eb" prot="public" virt="non-virtual"><scope>json_sax</scope><name>json_sax</name></member>
      <member refid="structjson__sax_1adb6b743b889faf0c050f80bfae890450" prot="public" virt="non-virtual"><scope>json_sax</scope><name>json_sax</name></member>
      <member refid="structjson__sax_1a3355ecd7e3e9806dcb80b2f8842b82ce" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>key</name></member>
      <member refid="structjson__sax_1acbcc09c0ada2782cd73cc4135823181d" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>null</name></member>
      <member refid="structjson__sax_1a19eafa3a92fc75e0258a842283396aa9" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>number_float</name></member>
      <member refid="structjson__sax_1acb0bfbb3b0c6e9dc02cd6aab12c85654" prot="public" virt="non-virtual"><scope>json_sax</scope><name>number_float_t</name></member>
      <member refid="structjson__sax_1a46cc306b7677553d8f6bd8c9592eb1bd" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>number_integer</name></member>
      <member refid="structjson__sax_1a5fd59c56514447ab1a7c5e7f0ab24601" prot="public" virt="non-virtual"><scope>json_sax</scope><name>number_integer_t</name></member>
      <member refid="structjson__sax_1a32f8a32794cb384f0de3d3a96a6bb696" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>number_unsigned</name></member>
      <member refid="structjson__sax_1acbd02515ccdc3bfe940688fc96ac1359" prot="public" virt="non-virtual"><scope>json_sax</scope><name>number_unsigned_t</name></member>
      <member refid="structjson__sax_1a09ee025eef62b4297faf70ab964d557e" prot="public" virt="non-virtual"><scope>json_sax</scope><name>operator=</name></member>
      <member refid="structjson__sax_1acd554bf068d498dccf90854f24888b8e" prot="public" virt="non-virtual"><scope>json_sax</scope><name>operator=</name></member>
      <member refid="structjson__sax_1af165920966b60b78e57a2e4d92a63897" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>parse_error</name></member>
      <member refid="structjson__sax_1afc4d5c0d123f2e3c939060a778c4f22c" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>start_array</name></member>
      <member refid="structjson__sax_1a54a0883df64f40664395e3dad674aaa5" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>start_object</name></member>
      <member refid="structjson__sax_1a3da9ee0c61f1a37e6c6a3d2dccb16765" prot="public" virt="pure-virtual"><scope>json_sax</scope><name>string</name></member>
      <member refid="structjson__sax_1a62085d156a899aaf2913ac25ded93996" prot="public" virt="non-virtual"><scope>json_sax</scope><name>string_t</name></member>
      <member refid="structjson__sax_1aa6c51db3f302401a85a89b750b654ad9" prot="public" virt="virtual"><scope>json_sax</scope><name>~json_sax</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
