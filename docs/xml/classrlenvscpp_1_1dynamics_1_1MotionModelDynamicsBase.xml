<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>rlenvscpp::dynamics::MotionModelDynamicsBase</compoundname>
    <basecompoundref prot="private" virt="non-virtual">boost::noncopyable</basecompoundref>
    <includes refid="motion__model__base_8h" local="no">motion_model_base.h</includes>
    <templateparamlist>
      <param>
        <type>typename StateTp</type>
      </param>
      <param>
        <type>typename MatrixDescriptor</type>
      </param>
      <param>
        <type>typename InputTp</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a447115c79f82cb47f7a5c4f442e75fc0" prot="public" static="no">
        <type>StateTp</type>
        <definition>typedef StateTp rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::state_type</definition>
        <argsstring></argsstring>
        <name>state_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="25" column="21" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ad48f9ad639a987a458f452579bcf4946" prot="public" static="no">
        <type>state_type</type>
        <definition>typedef state_type rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::output_type</definition>
        <argsstring></argsstring>
        <name>output_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="26" column="24" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1af30a40cebffce6bd30354908984e3abb" prot="public" static="no">
        <type>InputTp</type>
        <definition>typedef InputTp rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::input_type</definition>
        <argsstring></argsstring>
        <name>input_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="27" column="21" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a2ea6538982777d370afe326f1c30e607" prot="public" static="no">
        <type>MatrixDescriptor</type>
        <definition>typedef MatrixDescriptor rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::matrix_descriptor_type</definition>
        <argsstring></argsstring>
        <name>matrix_descriptor_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="28" column="30" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1aaa6f7d4a7e540f8e7e221db121bc907b" prot="public" static="no">
        <type>matrix_descriptor_type::matrix_type</type>
        <definition>typedef matrix_descriptor_type::matrix_type rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::matrix_type</definition>
        <argsstring></argsstring>
        <name>matrix_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="29" column="58" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ac7bfa0c5eb63d4a936aa6c432eb0c62a" prot="public" static="no">
        <type>matrix_descriptor_type::vector_type</type>
        <definition>typedef matrix_descriptor_type::vector_type rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::vector_type</definition>
        <argsstring></argsstring>
        <name>vector_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="30" column="58" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ab505348dd7a8bd73146f304593b98982" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
        <definition>const uint_t rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::state_dimension</definition>
        <argsstring></argsstring>
        <name>state_dimension</name>
        <initializer>= StateTp::dimension</initializer>
        <briefdescription>
<para>The dimension of the state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="35" column="25" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1af26c8b9d7aa6acccb48388a45ea6878a" prot="protected" static="no" mutable="no">
        <type>state_type</type>
        <definition>state_type rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <briefdescription>
<para>The object describing the state of the object of which its dynamics are described/modeled by this MotionModel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="150" column="16" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1af2b93f301fe76ec82374cc3c60ef68bb" prot="protected" static="no" mutable="no">
        <type>matrix_descriptor_type</type>
        <definition>matrix_descriptor_type rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::matrix_description_</definition>
        <argsstring></argsstring>
        <name>matrix_description_</name>
        <briefdescription>
<para>matrix descriptor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="155" column="28" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ad95cdfeb2540dd571c2092e73df6ad2f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::update_description_matrices_on_evaluate_</definition>
        <argsstring></argsstring>
        <name>update_description_matrices_on_evaluate_</name>
        <briefdescription>
<para>flag indicating the update of the matrices the model is using to describe itself </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="161" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ad0f26c623a77afb8903f0235dc8f0b36" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::dt_</definition>
        <argsstring></argsstring>
        <name>dt_</name>
        <briefdescription>
<para>The time step the integrator uses. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="166" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a4a7df0d96d88180f6cbe2837663a7843" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::tol_</definition>
        <argsstring></argsstring>
        <name>tol_</name>
        <briefdescription>
<para>tolerance </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="171" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a15d52cd1347e650b36ee784322f8d2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::~MotionModelDynamicsBase</definition>
        <argsstring>()=default</argsstring>
        <name>~MotionModelDynamicsBase</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="40" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ac37040c80f3cd72f14a3ad5dad7f3cf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>state_type &amp;</type>
        <definition>virtual state_type&amp; rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::evaluate</definition>
        <argsstring>(const input_type &amp;input)=0</argsstring>
        <name>evaluate</name>
        <param>
          <type>const input_type &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Updates and returns the value of the state given the input. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="46" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a08098e5d14d9af91a4bbb644e604eeba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const state_type &amp;</type>
        <definition>const state_type&amp; rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::get_state</definition>
        <argsstring>() const</argsstring>
        <name>get_state</name>
        <briefdescription>
<para>Read access to the state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="51" column="22" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1aae3398753ff616aa4146f89e0bc3c474" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>state_type &amp;</type>
        <definition>state_type&amp; rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::get_state</definition>
        <argsstring>()</argsstring>
        <name>get_state</name>
        <briefdescription>
<para>Read/write access to the state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="56" column="16" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ae62f1512a79a45c6c930065a659080ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string_view &gt;</type>
        <definition>std::vector&lt;std::string_view&gt; rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::get_state_variables_names</definition>
        <argsstring>() const</argsstring>
        <name>get_state_variables_names</name>
        <briefdescription>
<para>get_state_variables_names. Returns the name of the variables in the state </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="62" column="17" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="62" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a98d8a2462ced6f7affa9a71da8b12d27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>matrix_type &amp;</type>
        <definition>matrix_type&amp; rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::get_matrix</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>get_matrix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="65" column="17" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a35520c9f7045ef829ec789fbe376013d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const matrix_type &amp;</type>
        <definition>const matrix_type&amp; rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::get_matrix</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>get_matrix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="66" column="23" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a8cf812ea6634771def813aa4b077fe7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::set_matrix</definition>
        <argsstring>(const std::string &amp;name, const matrix_type &amp;mat)</argsstring>
        <name>set_matrix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const matrix_type &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="67" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1afb13ec33d5be8104beb17cb5206ed30a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector_type &amp;</type>
        <definition>vector_type&amp; rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::get_vector</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>get_vector</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="69" column="17" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a7bf73427232b99581429d11f030419df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const vector_type &amp;</type>
        <definition>const vector_type&amp; rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::get_vector</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>get_vector</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="70" column="23" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ac67646f4673903762fa4e6c7fb020386" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::set_vector</definition>
        <argsstring>(const std::string &amp;name, const vector_type &amp;vec)</argsstring>
        <name>set_vector</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const vector_type &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="71" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a817e00f5480d3856afc41ec2482abe47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::set_matrix_update_flag</definition>
        <argsstring>(bool f)</argsstring>
        <name>set_matrix_update_flag</name>
        <param>
          <type>bool</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>set the matrix update flag </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="76" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a18ef8d12f92c19682a5ab610f4e9f98c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::allows_matrix_updates</definition>
        <argsstring>() const</argsstring>
        <name>allows_matrix_updates</name>
        <briefdescription>
<para>Set the flag for updating or not the matrices describing the model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="82" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a1fc6d82a8f896f44897b3b5193b59f14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::has_matrix</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>has_matrix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns true if the matrix with the given name already exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="88" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="88" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a30f307371c2c4ac8e353db6cec838165" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::get_state_property</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>get_state_property</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the state property with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="94" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a2a639aaf2ff67d9ce244766355c3812e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::set_state_property</definition>
        <argsstring>(const std::string &amp;name, real_t value)</argsstring>
        <name>set_state_property</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the name-th value of the state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="99" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="99" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a13c1155415be9a77b0e03f56c58604d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::set_state_name_value</definition>
        <argsstring>(uint_t i, const std::string &amp;name, real_t val)</argsstring>
        <name>set_state_name_value</name>
        <param>
          <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set the state names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="103" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="103" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a1f4b1b9269b3468c7e1b5c8184f993b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::set_state_name_value</definition>
        <argsstring>(uint_t i, const std::pair&lt; std::string, real_t &gt; &amp;val)</argsstring>
        <name>set_state_name_value</name>
        <param>
          <type><ref refid="namespacerlenvscpp_1ab3932c04676822ef4121e58e701dc623" kindref="member">uint_t</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const std::pair&lt; std::string, <ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref> &gt; &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set the state names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="109" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="109" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a94e0d15af2efada4499c7735fd386df4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::set_time_step</definition>
        <argsstring>(real_t dt)</argsstring>
        <name>set_time_step</name>
        <param>
          <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Set the time step. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="115" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a86de2f41cc4b0cb6e259daf7f5813a46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::get_time_step</definition>
        <argsstring>() const</argsstring>
        <name>get_time_step</name>
        <briefdescription>
<para>get_time_step Returns the sampling time the dynamics model is using </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="121" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a6cdd87d6a43b77a851fd20544a2bfe22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
        <definition>real_t rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::get_tolerance</definition>
        <argsstring>() const</argsstring>
        <name>get_tolerance</name>
        <briefdescription>
<para>get_tolerance Returns the general tolerance used in the calculations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="127" column="12" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a3568c7fc57bd7ed8aaba67edf81e51e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::set_tolerance</definition>
        <argsstring>(real_t tol)</argsstring>
        <name>set_tolerance</name>
        <param>
          <type><ref refid="namespacerlenvscpp_1ac50675da35de20edc5e4b56549ebe2e2" kindref="member">real_t</ref></type>
          <declname>tol</declname>
        </param>
        <briefdescription>
<para>set_tolerance Set the general tolerance used in the calculations. Default is KernelConsts::tolerance() </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="133" column="10" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="133" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ab7973af3b5826d0cd6b43cee4ca47041" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::MotionModelDynamicsBase</definition>
        <argsstring>(bool update_description_matrices_on_evaluate=true)</argsstring>
        <name>MotionModelDynamicsBase</name>
        <param>
          <type>bool</type>
          <declname>update_description_matrices_on_evaluate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="138" column="14" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="178" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1afd2ec840791eab9fdd78872223f706f4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;::MotionModelDynamicsBase</definition>
        <argsstring>(const state_type &amp;init_state, bool update_description_matrices_on_evaluate=true)</argsstring>
        <name>MotionModelDynamicsBase</name>
        <param>
          <type>const state_type &amp;</type>
          <declname>init_state</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>update_description_matrices_on_evaluate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="142" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for deriving motion models. Motion models describe the dynamics or kinematics of a rigid body. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>boost::noncopyable</label>
      </node>
      <node id="1">
        <label>rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;</label>
        <link refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>boost::noncopyable</label>
      </node>
      <node id="1">
        <label>rlenvscpp::dynamics::MotionModelDynamicsBase&lt; StateTp, MatrixDescriptor, InputTp &gt;</label>
        <link refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" line="21" column="1" bodyfile="/home/alex/qi3/rlenvs_from_cpp/src/rlenvs/dynamics/motion_model_base.h" bodystart="22" bodyend="173"/>
    <listofallmembers>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a18ef8d12f92c19682a5ab610f4e9f98c" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>allows_matrix_updates</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ad0f26c623a77afb8903f0235dc8f0b36" prot="protected" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>dt_</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ac37040c80f3cd72f14a3ad5dad7f3cf0" prot="public" virt="pure-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>evaluate</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a98d8a2462ced6f7affa9a71da8b12d27" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>get_matrix</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a35520c9f7045ef829ec789fbe376013d" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>get_matrix</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a08098e5d14d9af91a4bbb644e604eeba" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>get_state</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1aae3398753ff616aa4146f89e0bc3c474" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>get_state</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a30f307371c2c4ac8e353db6cec838165" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>get_state_property</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ae62f1512a79a45c6c930065a659080ef" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>get_state_variables_names</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a86de2f41cc4b0cb6e259daf7f5813a46" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>get_time_step</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a6cdd87d6a43b77a851fd20544a2bfe22" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>get_tolerance</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1afb13ec33d5be8104beb17cb5206ed30a" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>get_vector</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a7bf73427232b99581429d11f030419df" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>get_vector</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a1fc6d82a8f896f44897b3b5193b59f14" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>has_matrix</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1af30a40cebffce6bd30354908984e3abb" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>input_type</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1af2b93f301fe76ec82374cc3c60ef68bb" prot="protected" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>matrix_description_</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a2ea6538982777d370afe326f1c30e607" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>matrix_descriptor_type</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1aaa6f7d4a7e540f8e7e221db121bc907b" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>matrix_type</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ab7973af3b5826d0cd6b43cee4ca47041" prot="protected" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>MotionModelDynamicsBase</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1afd2ec840791eab9fdd78872223f706f4" prot="protected" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>MotionModelDynamicsBase</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ad48f9ad639a987a458f452579bcf4946" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>output_type</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a8cf812ea6634771def813aa4b077fe7d" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>set_matrix</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a817e00f5480d3856afc41ec2482abe47" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>set_matrix_update_flag</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a13c1155415be9a77b0e03f56c58604d0" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>set_state_name_value</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a1f4b1b9269b3468c7e1b5c8184f993b6" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>set_state_name_value</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a2a639aaf2ff67d9ce244766355c3812e" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>set_state_property</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a94e0d15af2efada4499c7735fd386df4" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>set_time_step</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a3568c7fc57bd7ed8aaba67edf81e51e6" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>set_tolerance</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ac67646f4673903762fa4e6c7fb020386" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>set_vector</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1af26c8b9d7aa6acccb48388a45ea6878a" prot="protected" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>state_</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ab505348dd7a8bd73146f304593b98982" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>state_dimension</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a447115c79f82cb47f7a5c4f442e75fc0" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>state_type</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a4a7df0d96d88180f6cbe2837663a7843" prot="protected" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>tol_</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ad95cdfeb2540dd571c2092e73df6ad2f" prot="protected" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>update_description_matrices_on_evaluate_</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1ac7bfa0c5eb63d4a936aa6c432eb0c62a" prot="public" virt="non-virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>vector_type</name></member>
      <member refid="classrlenvscpp_1_1dynamics_1_1MotionModelDynamicsBase_1a15d52cd1347e650b36ee784322f8d2aa" prot="public" virt="virtual"><scope>rlenvscpp::dynamics::MotionModelDynamicsBase</scope><name>~MotionModelDynamicsBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
